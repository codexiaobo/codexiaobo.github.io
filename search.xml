<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Lesson one &amp; Lesson Two</title>
    <url>/posts/2738277980/</url>
    <content><![CDATA[<p>![Lesson one &amp; Lesson Two](<a href="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/English/Lesson">https://cdn.jsdelivr.net/gh/codexiaobo/image@main/English/Lesson</a> one &amp; Lesson Two.kfn26oelbgw.jpg)</p>
<!--sleep-->

<span id="more"></span>

<h1 id="Lesson-One-amp-Lesson-Two"><a href="#Lesson-One-amp-Lesson-Two" class="headerlink" title="Lesson One &amp; Lesson Two"></a>Lesson One &amp; Lesson Two</h1><table>
<thead>
<tr>
<th align="center">单词</th>
<th align="center">翻译</th>
</tr>
</thead>
<tbody><tr>
<td align="center">excuse</td>
<td align="center">原谅</td>
</tr>
<tr>
<td align="center">me</td>
<td align="center">我（宾格）</td>
</tr>
<tr>
<td align="center">yes</td>
<td align="center">是的</td>
</tr>
<tr>
<td align="center">is</td>
<td align="center">动词现在时第三人称单数</td>
</tr>
<tr>
<td align="center">this</td>
<td align="center">这</td>
</tr>
<tr>
<td align="center">your</td>
<td align="center">你的、你们的</td>
</tr>
<tr>
<td align="center">hand</td>
<td align="center">手</td>
</tr>
<tr>
<td align="center">bag</td>
<td align="center">包</td>
</tr>
<tr>
<td align="center">handbag</td>
<td align="center">手提包</td>
</tr>
<tr>
<td align="center">pardon</td>
<td align="center">原谅、请再说一遍</td>
</tr>
<tr>
<td align="center">it</td>
<td align="center">它</td>
</tr>
<tr>
<td align="center">thank you</td>
<td align="center">感谢你</td>
</tr>
<tr>
<td align="center">very much</td>
<td align="center">非常地</td>
</tr>
<tr>
<td align="center">friend</td>
<td align="center">朋友</td>
</tr>
<tr>
<td align="center">name</td>
<td align="center">名字</td>
</tr>
<tr>
<td align="center">student</td>
<td align="center">学生</td>
</tr>
<tr>
<td align="center">nice</td>
<td align="center">好</td>
</tr>
<tr>
<td align="center">sorry</td>
<td align="center">对不起</td>
</tr>
<tr>
<td align="center">pretty</td>
<td align="center">漂亮</td>
</tr>
<tr>
<td align="center">pen</td>
<td align="center">钢笔</td>
</tr>
<tr>
<td align="center">pencil</td>
<td align="center">铅笔</td>
</tr>
<tr>
<td align="center">book</td>
<td align="center">书</td>
</tr>
<tr>
<td align="center">watch</td>
<td align="center">手表</td>
</tr>
<tr>
<td align="center">coat</td>
<td align="center">上衣、外衣</td>
</tr>
<tr>
<td align="center">dress</td>
<td align="center">连衣裙</td>
</tr>
<tr>
<td align="center">skirt</td>
<td align="center">裙子</td>
</tr>
<tr>
<td align="center">shirt</td>
<td align="center">衬衣</td>
</tr>
<tr>
<td align="center">car</td>
<td align="center">汽车</td>
</tr>
<tr>
<td align="center">house</td>
<td align="center">房子</td>
</tr>
<tr>
<td align="center">flat</td>
<td align="center">公寓楼</td>
</tr>
<tr>
<td align="center">bus</td>
<td align="center">公共汽车</td>
</tr>
<tr>
<td align="center">coach</td>
<td align="center">长途客车</td>
</tr>
<tr>
<td align="center">now</td>
<td align="center">现在</td>
</tr>
</tbody></table>
<h2 id="Is-this-your-book-（这是你的书吗？）"><a href="#Is-this-your-book-（这是你的书吗？）" class="headerlink" title="Is this your book?（这是你的书吗？）"></a>Is this your book?（这是你的书吗？）</h2><blockquote>
<p>Yes,it,is            是的这是我的书</p>
</blockquote>
<blockquote>
<p>No,it isn’t            不、这不是我的</p>
</blockquote>
]]></content>
      <tags>
        <tag>new concept english</tag>
      </tags>
  </entry>
  <entry>
    <title>javaWeb图书管理系统version 1.1</title>
    <url>/posts/4197782020/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/t018b8434f8ef35a6ea.3ddjwtzmz3u0.jpg" alt="version 1.1"></p>
<!--sleep-->

<span id="more"></span>

<h1 id="javaWeb"><a href="#javaWeb" class="headerlink" title="javaWeb"></a>javaWeb</h1><h2 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h2><blockquote>
<p>一种编程思想</p>
</blockquote>
<p><strong>C（Controller）</strong></p>
<blockquote>
<p>控制、派发、Servlet</p>
</blockquote>
<p><strong>M（Model）</strong></p>
<blockquote>
<p>业务数据、service、entity、repository</p>
</blockquote>
<p><strong>V（View）</strong></p>
<blockquote>
<p>视图、jsp</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/MVC.3si24j9pxm00.png" alt="MVC"></p>
<h2 id="图书管理系统简单模拟"><a href="#图书管理系统简单模拟" class="headerlink" title="图书管理系统简单模拟"></a>图书管理系统简单模拟</h2><blockquote>
<p>开发人员：1人<br>开发环境：windows10/jdk1.8/mysql5.7<br>开发工具：Idea/Datagrip/<br>项目介绍：图书管理系统模拟、首先分为读者和图书管理员、读者可登录进行图书借阅、归还、等待图书管理员审批、图书管理员可登录对读者进行审批、记录等操作<br>项目技术：JSP+Jquery+Java+JavaWeb</p>
</blockquote>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p><strong>读者表</strong> <strong>管理员表</strong> <strong>图书表</strong> <strong>图书分类表</strong> <strong>借阅表</strong> <strong>归还表</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/%E6%95%B0%E6%8D%AE%E5%BA%93.7cck8ctubu40.png" alt="数据库"></p>
<h3 id="后端结构"><a href="#后端结构" class="headerlink" title="后端结构"></a>后端结构</h3><p><strong>Controller</strong> <strong>Entity</strong> <strong>Filter</strong> <strong>Repository</strong> <strong>Service</strong> <strong>Utils</strong> <strong>C3P0-config.xml</strong> <strong>web</strong> <strong>css</strong> <strong>images</strong> <strong>js</strong> <strong>WEB-INF</strong> <strong>jsp</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/%E9%A1%B9%E7%9B%AE%E5%88%86%E5%B1%82.57eo5qwbjcw0.png" alt="项目分层"></p>
<p><strong>Controller</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/Controller.1wuqyhu8fcww.png" alt="Controller"></p>
<p><strong>Entity</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/Entity.6hrpbtdz6zo.png" alt="Entity"></p>
<p><strong>Filter</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/Filter.7diwgdk5ed40.png" alt="Filter"></p>
<p><strong>Repository</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/Repository.6yyhczc1ujg0.png" alt="Repository"></p>
<p><strong>Service</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/Service.28bszpsjiusk.png" alt="Service"></p>
<p><strong>Uitls</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/Utils.75hm43vyipg0.png" alt="Utils"></p>
<p><strong>C3P0-config.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;testc3p0&quot;</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!-- 指定连接数据源的基本属性 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>xiaobo<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.cj.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/db_library?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8<span class="symbol">&amp;amp;</span>serverTimezone=UTC<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!-- 若数据库中连接数不足时, 一次向数据库服务器申请多少个连接 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;acquireIncrement&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 初始化数据库连接池时连接的数量 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据库连接池中的最小的数据库连接数 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据库连接池中的最大的数据库连接数 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>web</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/web.1mwqewfnzpuo.png" alt="web"></p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p><strong>BookServlet</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 图书分页Controller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiaobo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/23 - 10:37</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/book&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BookService bookService = <span class="keyword">new</span> BookServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String method = req.getParameter(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        Reader reader = (Reader)req.getSession().getAttribute(<span class="string">&quot;object&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == method)&#123;</span><br><span class="line">            method = <span class="string">&quot;findAll&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (method)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;findAll&quot;</span>:</span><br><span class="line">                String pageStr = req.getParameter(<span class="string">&quot;page&quot;</span>);</span><br><span class="line">                Integer page = Integer.parseInt(pageStr);</span><br><span class="line"></span><br><span class="line">                req.setAttribute(<span class="string">&quot;list&quot;</span>,bookService.findAll(page));</span><br><span class="line">                req.setAttribute(<span class="string">&quot;dataPrePage&quot;</span>,<span class="number">5</span>);</span><br><span class="line">                req.setAttribute(<span class="string">&quot;currentPage&quot;</span>,page);</span><br><span class="line">                req.setAttribute(<span class="string">&quot;pages&quot;</span>,bookService.getPages());</span><br><span class="line">                req.setAttribute(<span class="string">&quot;reader&quot;</span>,reader);</span><br><span class="line"></span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;index.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;addBorrow&quot;</span>:</span><br><span class="line">                String bookidStr = req.getParameter(<span class="string">&quot;bookid&quot;</span>);</span><br><span class="line">                Integer bookid = Integer.parseInt(bookidStr);</span><br><span class="line">                bookService.addBorrow(bookid,reader.getId());</span><br><span class="line">                resp.sendRedirect(<span class="string">&quot;/book?method=findAllBorrow&amp;page=1&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">&quot;findAllBorrow&quot;</span>:</span><br><span class="line">                pageStr = req.getParameter(<span class="string">&quot;page&quot;</span>);</span><br><span class="line">                page = Integer.parseInt(pageStr);</span><br><span class="line"></span><br><span class="line">                req.setAttribute(<span class="string">&quot;list&quot;</span>,bookService.findBorrowById(reader.getId(),page));</span><br><span class="line">                req.setAttribute(<span class="string">&quot;dataPrePage&quot;</span>,<span class="number">5</span>);</span><br><span class="line">                req.setAttribute(<span class="string">&quot;currentPage&quot;</span>,page);</span><br><span class="line">                req.setAttribute(<span class="string">&quot;pages&quot;</span>,bookService.getBorrowPages(reader.getId()));</span><br><span class="line"></span><br><span class="line">                req.setAttribute(<span class="string">&quot;reader&quot;</span>,reader);</span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;borrow.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>BookServiceImpl</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**图书业务处理service实现类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiaobo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/23 - 10:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title">BookService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BookRepository bookRepository = <span class="keyword">new</span> BookRepositoryImpl();</span><br><span class="line">    <span class="keyword">private</span> BorrowRepository borrowRepository = <span class="keyword">new</span> BorrowRepositoryImpl();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> LIMIT = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图书查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page 当前页码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 查询到的图书结果集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">findAll</span><span class="params">(<span class="keyword">int</span> page)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//计算起始位置、总页码数-1 乘 分页数量</span></span><br><span class="line">        <span class="keyword">int</span> index = (page - <span class="number">1</span>) * LIMIT;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bookRepository.findAll(index,LIMIT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 总页码设置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回总页码数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPages</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = bookRepository.count();</span><br><span class="line">        <span class="keyword">int</span> page = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(count / LIMIT == <span class="number">0</span>)&#123;</span><br><span class="line">            page = count/LIMIT;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            page = count/LIMIT + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 借阅业务处理接口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bookId 图书编号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> readerId 读者编号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addBorrow</span><span class="params">(Integer bookId, Integer readerId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取当前系统时间</span></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        <span class="comment">//将时间转为字符串格式</span></span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">        String dates = simpleDateFormat.format(date);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将当前系统时间+14天设置为最晚归还日期</span></span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        calendar.set(Calendar.DAY_OF_YEAR, calendar.get(Calendar.DAY_OF_YEAR) + <span class="number">14</span>);</span><br><span class="line">        Date time = calendar.getTime();</span><br><span class="line">        String returnTime = simpleDateFormat.format(time);</span><br><span class="line">        borrowRepository.insert(bookId,readerId,dates,returnTime,<span class="keyword">null</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Borrow&gt; <span class="title">findBorrowById</span><span class="params">(Integer id,Integer page)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = (page - <span class="number">1</span>) * LIMIT;</span><br><span class="line">        <span class="keyword">return</span> borrowRepository.findAllById(id,index,LIMIT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBorrowPages</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = borrowRepository.count(id);</span><br><span class="line">        <span class="keyword">int</span> page = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (count % LIMIT == <span class="number">0</span>)&#123;</span><br><span class="line">            page = count / LIMIT;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            page = count / LIMIT + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Borrow&gt; <span class="title">findBorrowByState</span><span class="params">(Integer state, Integer page)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = (page - <span class="number">1</span>) * LIMIT;</span><br><span class="line">        <span class="keyword">return</span> borrowRepository.findAllByState(state,index,LIMIT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBorrowStatePages</span><span class="params">(Integer state)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = borrowRepository.countState(state);</span><br><span class="line">        <span class="keyword">int</span> page = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(count % LIMIT == <span class="number">0</span>)&#123;</span><br><span class="line">            page = count / LIMIT;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            page = count / LIMIT + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>BookRepositoryImpl</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiaobo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/23 - 10:03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookRepositoryImpl</span> <span class="keyword">implements</span> <span class="title">BookRepository</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员变量、扩大作用范围</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ComboPooledDataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> Connection connection = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Book&gt; list = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图书分页查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 起始下标</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> limit 查询个数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回结果集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">findAll</span><span class="params">(<span class="keyword">int</span> index,<span class="keyword">int</span> limit)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//调用自定义工具类访问数据库</span></span><br><span class="line">            connection = JDBCTools.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//定义SQL语句、赋值、并执行</span></span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM book,bookcase WHERE book.bookcaseid = bookcase.id limit ?,?&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            preparedStatement.setInt(<span class="number">1</span>,index);</span><br><span class="line">            preparedStatement.setInt(<span class="number">2</span>,limit);</span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            <span class="comment">//定义一个List集合接受查询结果</span></span><br><span class="line">            list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="comment">//遍历查询的结果集</span></span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                list.add(<span class="keyword">new</span> Book(resultSet.getInt(<span class="number">1</span>),</span><br><span class="line">                        resultSet.getString(<span class="number">2</span>),</span><br><span class="line">                        resultSet.getString(<span class="number">3</span>),</span><br><span class="line">                        resultSet.getString(<span class="number">4</span>),</span><br><span class="line">                        resultSet.getInt(<span class="number">5</span>),</span><br><span class="line">                        resultSet.getDouble(<span class="number">6</span>),</span><br><span class="line">                        <span class="keyword">new</span> BookCase(resultSet.getInt(<span class="number">9</span>),resultSet.getString(<span class="number">10</span>))</span><br><span class="line">                ));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="comment">//调用自定义工具类关闭资源</span></span><br><span class="line">            JDBCTools.release(connection,preparedStatement,resultSet);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询图书数量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回查询到的数量个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">count</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//调用自定义工具类访问数据库</span></span><br><span class="line">            connection = JDBCTools.getConnection();</span><br><span class="line">            <span class="comment">//定义SQL语句、赋值、并执行</span></span><br><span class="line">            String sql = <span class="string">&quot;SELECT count(*) FROM book,bookcase WHERE book.bookcaseid = bookcase.id&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            <span class="comment">//判断查询到的结果集</span></span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                count = resultSet.getInt(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//调用自定义工具类关闭资源</span></span><br><span class="line">            JDBCTools.release(connection,preparedStatement,resultSet);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>JDBCTools</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiaobo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/22 - 23:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCTools</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员变量、扩大作用范围</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Connection connection = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ComboPooledDataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态代码块、类加载时初始化</span></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        dataSource = <span class="keyword">new</span> ComboPooledDataSource(<span class="string">&quot;testc3p0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回数据库连接驱动</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            connection = dataSource.getConnection();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭资源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> statement</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultSet</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(connection != <span class="keyword">null</span>)&#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(statement != <span class="keyword">null</span>)&#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(resultSet != <span class="keyword">null</span>)&#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Book</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 图书实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiaobo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/23 - 9:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">private</span> String publish;</span><br><span class="line">    <span class="keyword">private</span> Integer pages;</span><br><span class="line">    <span class="keyword">private</span> Double price;</span><br><span class="line">    <span class="keyword">private</span> BookCase bookCase;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">(String name, String author, String publish)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.author = author;</span><br><span class="line">        <span class="keyword">this</span>.publish = publish;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">(Integer id, String name, String author, String publish, Integer pages, Double price, BookCase bookCase)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.author = author;</span><br><span class="line">        <span class="keyword">this</span>.publish = publish;</span><br><span class="line">        <span class="keyword">this</span>.pages = pages;</span><br><span class="line">        <span class="keyword">this</span>.price = price;</span><br><span class="line">        <span class="keyword">this</span>.bookCase = bookCase;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAuthor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> author;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAuthor</span><span class="params">(String author)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.author = author;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPublish</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> publish;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPublish</span><span class="params">(String publish)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.publish = publish;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getPages</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPages</span><span class="params">(Integer pages)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pages = pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getPrice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrice</span><span class="params">(Double price)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BookCase <span class="title">getBookCase</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bookCase;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookCase</span><span class="params">(BookCase bookCase)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bookCase = bookCase;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p>…</p>
<p><strong>功能欠缺</strong></p>
<blockquote>
<p>管理员图书添加功能<br>管理员图书修改功能<br>管理员图书删除功能<br>借阅状态更新 已借出的图书不允许再借、未借出的图书允许借阅</p>
</blockquote>
<p>小博正在完善功能、后续更新……</p>
<p><strong>正确的开始、微小的长进、然后持续、嘿、我是小博、带你一起看我目之所及的世界……</strong></p>
]]></content>
      <tags>
        <tag>javaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>AJAX&amp;JDBC&amp;C3P0&amp;DBUtils</title>
    <url>/posts/851211976/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/%E7%9A%AE%E5%8D%A1%E4%B8%98.5r796lrej2o0.jpg" alt="皮卡丘"></p>
<!--sellp-->

<span id="more"></span>

<h1 id="javaWeb"><a href="#javaWeb" class="headerlink" title="javaWeb"></a>javaWeb</h1><h2 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h2><blockquote>
<p>异步加载、客户端和服务器数据交互更新在局部页面的技术、局部刷新</p>
</blockquote>
<ul>
<li>Ajax优点</li>
</ul>
<p><strong>局部刷新、效率高</strong></p>
<p><strong>用户体验好</strong></p>
<ul>
<li>Ajax语法</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;lib/jquery-3.2.1.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;首页&lt;/title&gt;</span><br><span class="line">      &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">          $(function () &#123;</span><br><span class="line">              <span class="keyword">var</span> btn = $(<span class="string">&quot;#btn&quot;</span>);</span><br><span class="line">              btn.click(function () &#123;</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url: <span class="string">&quot;/test&quot;</span>,</span><br><span class="line">                    type: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">                    data: <span class="string">&quot;id=1&quot;</span>,</span><br><span class="line">                    dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">                    success: function (data) &#123;</span><br><span class="line">                        <span class="keyword">var</span> id = $(<span class="string">&quot;#id&quot;</span>);</span><br><span class="line">                        <span class="keyword">var</span> name = $(<span class="string">&quot;#name&quot;</span>);</span><br><span class="line">                        <span class="keyword">var</span> score = $(<span class="string">&quot;#score&quot;</span>);</span><br><span class="line">                        id.val(data.id);</span><br><span class="line">                        name.val(data.name)</span><br><span class="line">                        score.val(data.score)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">              &#125;);</span><br><span class="line">          &#125;);</span><br><span class="line">      &lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;h1 style=<span class="string">&quot;color: aqua&quot;</span>&gt;$&#123;String &#125;&lt;/h1&gt;</span><br><span class="line">  编号&lt;input id=<span class="string">&quot;id&quot;</span> type=<span class="string">&quot;text&quot;</span> /&gt;&lt;br/&gt;</span><br><span class="line">  姓名&lt;input id=<span class="string">&quot;name&quot;</span> type=<span class="string">&quot;text&quot;</span> /&gt;&lt;br/&gt;</span><br><span class="line">  分数&lt;input id=<span class="string">&quot;score&quot;</span> type=<span class="string">&quot;text&quot;</span> /&gt;&lt;br/&gt;</span><br><span class="line">  &lt;input id=<span class="string">&quot;btn&quot;</span> type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;点击添加&quot;</span>&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer id, String name, <span class="keyword">double</span> score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">testServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(<span class="number">3</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            User user = <span class="keyword">new</span> User(<span class="number">1</span>,<span class="string">&quot;小博&quot;</span>,<span class="number">99.99</span>);</span><br><span class="line">            JSONObject jsonObject = JSONObject.fromObject(user);</span><br><span class="line">            resp.getWriter().write(jsonObject.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>$.ajax({属性})  </li>
</ul>
<p><strong>url:请求的后端服务地址</strong>  </p>
<p><strong>type:请求方式、默认get</strong>  </p>
<p><strong>data:请求参数</strong>  </p>
<p><strong>dataType:服务器返回的数据类型、text/json/html/xml、一般为text/json</strong></p>
<p><strong>success:请求成功的回调函数</strong></p>
<p><strong>error:请求失败的回调函数</strong>  </p>
<p><strong>complete:请求完成的回调函数、无论成功或者失败都会调用</strong></p>
<ul>
<li><p>Ajax大致原理<br><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/AJAX%E6%B5%81%E7%A8%8B.11tqpqi9078.png" alt="AJAX流程"></p>
</li>
<li><p>传统Web数据交互和Ajax数据交互的区别</p>
</li>
</ul>
<p><strong>客户端请求方式</strong></p>
<blockquote>
<p>传统Web发送同步请求<br>Ajax发送异步请求</p>
</blockquote>
<p><strong>服务器响应方式</strong></p>
<blockquote>
<p>传统Web响应整个JSP页面<br>Ajax响应需要的数据</p>
</blockquote>
<p><strong>客户端处理方式</strong></p>
<blockquote>
<p>传统Web需要等待服务器完成响应并重新加载整个页面后、用户才能继续后续操纵<br>Ajax动态更新页面中局部内容、不影响用户其他操作</p>
</blockquote>
<h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><blockquote>
<p>一种轻量级数据交互格式、完成js与后端开发语言对象之间的转换</p>
</blockquote>
<ul>
<li>JSON格式</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;小博&quot;</span>,</span><br><span class="line">    <span class="attr">score</span>: <span class="number">99.99</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="省市区分级联动模拟"><a href="#省市区分级联动模拟" class="headerlink" title="省市区分级联动模拟"></a>省市区分级联动模拟</h2><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;js/jquery-3.2.1.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;地区&lt;/title&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">        $(function () &#123;</span><br><span class="line">            $(<span class="string">&quot;#shi&quot;</span>).change(function () &#123;</span><br><span class="line">                <span class="keyword">var</span> id = $(<span class="keyword">this</span>).val();</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url: <span class="string">&quot;/servlet&quot;</span>,</span><br><span class="line">                    type: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">                    data: <span class="string">&quot;id=&quot;</span> + id + <span class="string">&quot;&amp;type=shi&quot;</span>,</span><br><span class="line">                    dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">                    success: function (data) &#123;</span><br><span class="line">                        <span class="keyword">var</span> common = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">                            common += <span class="string">&quot;&lt;option&gt;&quot;</span> + data[i] + <span class="string">&quot;&lt;/option&gt;&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        $(<span class="string">&quot;#qu&quot;</span>).html(common);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">            $(<span class="string">&quot;#sheng&quot;</span>).change(function () &#123;</span><br><span class="line">                <span class="keyword">var</span> id = $(<span class="keyword">this</span>).val();</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url: <span class="string">&quot;/servlet&quot;</span>,</span><br><span class="line">                    type: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">                    data: <span class="string">&quot;id=&quot;</span> + id + <span class="string">&quot;&amp;type=sheng&quot;</span>,</span><br><span class="line">                    dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">                    success: function (data) &#123;</span><br><span class="line">                        <span class="keyword">var</span> common = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                        <span class="keyword">var</span> shi = data.shi;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; shi.length; i++) &#123;</span><br><span class="line">                            common += <span class="string">&quot;&lt;option&gt;&quot;</span> + shi[i] + <span class="string">&quot;&lt;/option&gt;&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        $(<span class="string">&quot;#shi&quot;</span>).html(common);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">var</span>  common = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                        <span class="keyword">var</span> qu = data.qu;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; qu.length; i++) &#123;</span><br><span class="line">                            common += <span class="string">&quot;&lt;option&gt;&quot;</span> + qu[i] + <span class="string">&quot;&lt;/option&gt;&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        $(<span class="string">&quot;#qu&quot;</span>).html(common);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">省&lt;select id=<span class="string">&quot;sheng&quot;</span>&gt;</span><br><span class="line">    &lt;option value=<span class="string">&quot;请选择&quot;</span>&gt;请选择&lt;/option&gt;</span><br><span class="line">    &lt;option value=<span class="string">&quot;辽宁省&quot;</span>&gt;辽宁省&lt;/option&gt;</span><br><span class="line">    &lt;option value=<span class="string">&quot;吉林省&quot;</span>&gt;吉林省&lt;/option&gt;</span><br><span class="line">    &lt;option value=<span class="string">&quot;黑龙江省&quot;</span>&gt;黑龙江省&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">市&lt;select id=<span class="string">&quot;shi&quot;</span>&gt;</span><br><span class="line">    &lt;option value=<span class="string">&quot;请选择&quot;</span>&gt;请选择&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">区&lt;select id=<span class="string">&quot;qu&quot;</span>&gt;</span><br><span class="line">    &lt;option&gt;请选择&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/servlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AjaxServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, List&lt;String&gt;&gt; map = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, List&lt;String&gt;&gt; map1 = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;沈北新区&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;皇姑区&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;和平区&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;沈阳市&quot;</span>,list);</span><br><span class="line">        list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;昌图县&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;西丰县&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;铁岭县&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;铁岭市&quot;</span>,list);</span><br><span class="line">        list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;西岗区&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;甘井子区&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;高薪园区&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;大连市&quot;</span>,list);</span><br><span class="line">        list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;吉林一区&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;吉林二区&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;吉林市&quot;</span>,list);</span><br><span class="line">        list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;长春一区&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;长春二区&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;长春市&quot;</span>,list);</span><br><span class="line">        list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;四平一区&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;四平二区&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;四平市&quot;</span>,list);</span><br><span class="line"></span><br><span class="line">        map1 = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;沈阳市&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;大连市&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;铁岭市&quot;</span>);</span><br><span class="line">        map1.put(<span class="string">&quot;辽宁省&quot;</span>,list);</span><br><span class="line"></span><br><span class="line">        list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;吉林市&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;四平市&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;长春市&quot;</span>);</span><br><span class="line">        map1.put(<span class="string">&quot;吉林省&quot;</span>,list);</span><br><span class="line"></span><br><span class="line">        list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;哈尔滨市&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;齐齐哈尔市&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;鹤岗市&quot;</span>);</span><br><span class="line">        map1.put(<span class="string">&quot;黑龙江省&quot;</span>,list);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        String type = req.getParameter(<span class="string">&quot;type&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(type.equals(<span class="string">&quot;shi&quot;</span>))&#123;</span><br><span class="line">            List&lt;String&gt; list = map.get(id);</span><br><span class="line"></span><br><span class="line">            JSONArray jsonArray = JSONArray.fromObject(list);</span><br><span class="line">            resp.getWriter().write(jsonArray.toString());</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(type.equals(<span class="string">&quot;sheng&quot;</span>))&#123;</span><br><span class="line">            List&lt;String&gt; shi = map1.get(id);</span><br><span class="line">            String s = shi.get(<span class="number">0</span>);</span><br><span class="line">            List&lt;String&gt; qu = map.get(s);</span><br><span class="line">            Region region = <span class="keyword">new</span> Region();</span><br><span class="line">            region.setShi(shi);</span><br><span class="line">            region.setQu(qu);</span><br><span class="line"></span><br><span class="line">            JSONObject jsonObject = JSONObject.fromObject(region);</span><br><span class="line"></span><br><span class="line">            resp.getWriter().write(jsonObject.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Region</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; shi;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; qu;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getShi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShi</span><span class="params">(List&lt;String&gt; shi)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.shi = shi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getQu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> qu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setQu</span><span class="params">(List&lt;String&gt; qu)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.qu = qu;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><ul>
<li>java.sql 和 javax.sq</li>
</ul>
<p><strong>DriverManager类</strong></p>
<p><strong>Connection接口</strong></p>
<p><strong>Statement接口</strong></p>
<p><strong>ResultSet接口</strong></p>
<ul>
<li>JDBC使用</li>
</ul>
<blockquote>
<p>加载数据驱动<br>获取Connection、java于数据库一次连接<br>创建Statement对象、由Connection产生执行SQL<br>创建ResultSet对象、保存Statement执行之后所查询到的结果  </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//加载驱动</span></span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            <span class="comment">//获取连接</span></span><br><span class="line">            String url = <span class="string">&quot;jdbc:mysql://localhost:3306/test_jdbc?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将地址、用户名、密码传进去</span></span><br><span class="line">            Connection connection = DriverManager.getConnection(url, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//            表更新的操作</span></span><br><span class="line"><span class="comment">//            String sql = &quot;INSERT INTO student(name,score) VALUES(&#x27;xiaobo&#x27;,66.66)&quot;;</span></span><br><span class="line"><span class="comment">//            String sql = &quot;UPDATE student SET name = &#x27;小王&#x27; WHERE id = 3&quot;;</span></span><br><span class="line"><span class="comment">//            String sql = &quot;DELETE FROM student WHERE id = 3&quot;;</span></span><br><span class="line"><span class="comment">//            Statement statement = connection.createStatement();</span></span><br><span class="line"><span class="comment">//            int i = statement.executeUpdate(sql);</span></span><br><span class="line"><span class="comment">//            if(i &gt; 0)&#123;</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;成功执行Sql&quot;);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"></span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM student&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//createStatement对象的创建</span></span><br><span class="line">            Statement statement = connection.createStatement();</span><br><span class="line">            <span class="comment">//执行SQL</span></span><br><span class="line">            ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">                <span class="keyword">int</span> id = resultSet.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                String name = resultSet.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                <span class="keyword">double</span> score = resultSet.getDouble(<span class="string">&quot;score&quot;</span>);</span><br><span class="line"></span><br><span class="line">                System.out.println(id + <span class="string">&quot;-&quot;</span> + name + <span class="string">&quot;-&quot;</span> + score);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Statement存在的问题</li>
</ul>
<p><strong>需要频繁拼接String字符串、出错率高</strong></p>
<p><strong>存在SQL注入风险</strong></p>
<ul>
<li><p>SQL注入<br><strong>利用系统没有对用户输入的信息进行充分检测、在用户输入的数据中注入非法的SQL语句、来进行恶意的行为</strong></p>
</li>
<li><p>PreparedStatement</p>
</li>
</ul>
<p><strong>Statement的子类、提供了SQL占位符的功能</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//加载驱动</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            <span class="comment">//获取连接</span></span><br><span class="line">            String url = <span class="string">&quot;jdbc:mysql://localhost:3306/test_jdbc?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&quot;</span>;</span><br><span class="line">            Connection connection = DriverManager.getConnection(url, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">            String userName = <span class="string">&quot;xiaobo&quot;</span>;</span><br><span class="line">            String passWord = <span class="string">&quot;xiaobo&quot;</span>;</span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM user WHERE name = ? AND password = ?&quot;</span>;</span><br><span class="line"></span><br><span class="line">            PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>,<span class="string">&quot;xiaobo&quot;</span>);</span><br><span class="line">            preparedStatement.setString(<span class="number">2</span>,<span class="string">&quot;xiaobo&quot;</span>);</span><br><span class="line"></span><br><span class="line">            ResultSet resultSet = preparedStatement.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                <span class="keyword">if</span>(userName.equals(resultSet.getString(<span class="string">&quot;password&quot;</span>)) &amp;&amp; passWord.equals(resultSet.getString(<span class="number">2</span>)))&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h2><ul>
<li>数据库连接池思想</li>
</ul>
<blockquote>
<p>为数据库建立一个缓冲区、预先向缓冲区放入一定数量的连接对象、当需要获取数据库连接时、只需要从缓冲池取出对象、用完之后在放回缓冲池中、供下一次请求使用、使资源重复利用<br>当数据库连接池中没有空闲的连接时、新的请求就会进入等待队列、等待其他线程释放资源</p>
</blockquote>
<ul>
<li>C3P0</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建C3P0</span></span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dataSource.setDriverClass(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/test_jdbc?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&quot;</span>);</span><br><span class="line">            dataSource.setUser(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">            dataSource.setPassword(<span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//初始化连接池数量</span></span><br><span class="line">            dataSource.setInitialPoolSize(<span class="number">20</span>);</span><br><span class="line">            <span class="comment">//当访问大于连接池数量时、连接池向DB申请的数量</span></span><br><span class="line">            dataSource.setAcquireIncrement(<span class="number">5</span>);</span><br><span class="line">            <span class="comment">//连接池空闲的最小数量</span></span><br><span class="line">            dataSource.setMinPoolSize(<span class="number">2</span>);</span><br><span class="line">            <span class="comment">//连接池最大数量</span></span><br><span class="line">            dataSource.setMaxPoolSize(<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (PropertyVetoException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>C3P0配置文件c3p0-config.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;testc3p0&quot;</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!-- 指定连接数据源的基本属性 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.cj.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/test_jdbc?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8<span class="symbol">&amp;amp;</span>serverTimezone=UTC<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!-- 若数据库中连接数不足时, 一次向数据库服务器申请多少个连接 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;acquireIncrement&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 初始化数据库连接池时连接的数量 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据库连接池中的最小的数据库连接数 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据库连接池中的最大的数据库连接数 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line">		</span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource(<span class="string">&quot;testc3p0&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><strong>初始化ComboPooledDataSource传入named-config标签name属性值即可</strong></p>
<h2 id="DBUtils"><a href="#DBUtils" class="headerlink" title="DBUtils"></a>DBUtils</h2><ul>
<li>ResultHandler结果集处理</li>
</ul>
<p><strong>BeanHandler:将结果映射成java对象</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Double score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getScore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(Double score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, score=&quot;</span> + score +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource(<span class="string">&quot;testc3p0&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Student student = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = dataSource.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM student WHERE id = 1&quot;</span>;</span><br><span class="line">            QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">            student = queryRunner.query(connection, sql, <span class="keyword">new</span> BeanHandler&lt;&gt;(Student.class));</span><br><span class="line">            System.out.println(student);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Student类当中必须有无参构造、因为通过反射获取到的Stduent、Student中属性需要和数据库字段相同形成映射关系 </p>
</blockquote>
<p><strong>BeanListHandler:将结果映射成List集合</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource(<span class="string">&quot;testc3p0&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = dataSource.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM student&quot;</span>;</span><br><span class="line">            QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">            List&lt;Object&gt; list = queryRunner.query(connection, sql, <span class="keyword">new</span> BeanListHandler&lt;&gt;(Student.class));</span><br><span class="line">            list.add(queryRunner.query(connection, sql, <span class="keyword">new</span> BeanListHandler&lt;&gt;(User.class)));</span><br><span class="line"></span><br><span class="line">            System.out.println(list);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>MapHandler:将结果映射成Map对象</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource(<span class="string">&quot;testc3p0&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = dataSource.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM student WHERE id = 1&quot;</span>;</span><br><span class="line">            QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">            Map&lt;String, Object&gt; map = queryRunner.query(connection, sql, <span class="keyword">new</span> MapHandler());</span><br><span class="line">            System.out.println(map.get(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">            System.out.println(map.get(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">            System.out.println(map.get(<span class="string">&quot;score&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>MapListHandler:将结果映射成MapList集合</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource(<span class="string">&quot;testc3p0&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = dataSource.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM student&quot;</span>;</span><br><span class="line">            QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line"></span><br><span class="line">            List&lt;Map&lt;String,Object&gt;&gt; list = queryRunner.query(connection,sql,<span class="keyword">new</span> MapListHandler());</span><br><span class="line">            <span class="keyword">for</span>(Map&lt;String,Object&gt; map : list)&#123;</span><br><span class="line">                System.out.println(map);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>









]]></content>
      <tags>
        <tag>javaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>EL表达式&amp;JSTL&amp;Filter&amp;Upload&amp;Download</title>
    <url>/posts/3944027832/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/%E5%93%86%E5%95%A6A%E6%A2%A6.4hh8d3sxrde0.jpg" alt="哆啦A梦"></p>
<!--sleep-->

<span id="more"></span>

<h1 id="Java-Web"><a href="#Java-Web" class="headerlink" title="Java Web"></a>Java Web</h1><h2 id="JSP内置对象作用域"><a href="#JSP内置对象作用域" class="headerlink" title="JSP内置对象作用域"></a>JSP内置对象作用域</h2><blockquote>
<p>page:对应的内置对象是pageContext、只在当前页面有效<br>request:对应的内置对象是request、在一次请求内有效<br>session:对应的内置对象是Session、在一次会话内有效<br>appliaction：对应的内置对象是Appliaction、对应整个Web应用</p>
</blockquote>
<ul>
<li>作用范围</li>
</ul>
<blockquote>
<p>page &lt; request &lt; session &lt; appliaction</p>
</blockquote>
<h2 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h2><blockquote>
<p>替代JSP页面中数据访问时的复杂编码、方便取出域中对象保存的数据</p>
<ul>
<li>表达式语法<br><strong>${变量名}</strong></li>
</ul>
</blockquote>
<ul>
<li>EL表达式默认查找顺序</li>
</ul>
<blockquote>
<p>pageContext ——&gt; request ——&gt; session ——&gt;appliaction</p>
</blockquote>
<ul>
<li>EL表达式指定查找顺序</li>
</ul>
<p><strong>pageContext:${pageScope.name}</strong> </p>
<p><strong>request:${requestScope.name}</strong>  </p>
<p><strong>session:${sessionScope.name}</strong></p>
<p><strong>appliaction:${appliactionScope.name}</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Double score;</span><br><span class="line">    <span class="keyword">private</span> Student student;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer id, String name, Double score, Student student)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">        <span class="keyword">this</span>.student = student;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getScore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(Double score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">getStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> student;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStudent</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.student = student;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, score=&quot;</span> + score +</span><br><span class="line">                <span class="string">&quot;, student=&quot;</span> + student +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.dream.xiaobo.EL.User&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.dream.xiaobo.EL.Student&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;EL&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="number">1</span>,<span class="string">&quot;小博&quot;</span>,<span class="number">99.9</span>, student);</span><br><span class="line">        pageContext.setAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;分数&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;地址&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;$&#123;pageContext.user.id&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;pageContext.user.name&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;pageContext.user.score&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;pageContext.user.student&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>EL表达式支持运算符</li>
</ul>
<blockquote>
<p>&amp;&amp; –&gt; and<br>|| –&gt; or<br>! –&gt; not<br>== -&gt;&gt; eq<br>&lt; –&gt; lt<br>–&gt; gt<br>&lt;= –&gt; le<br>= –&gt; ge<br>empty（判断是否为空） –&gt; 空是变量为null、长度为0的String、size为0的集合</p>
</blockquote>
<h2 id="JSTL"><a href="#JSTL" class="headerlink" title="JSTL"></a>JSTL</h2><blockquote>
<p>使用标签完成一些逻辑处理、不在出现JSP脚本穿插情况</p>
</blockquote>
<ul>
<li>JSTL使用</li>
</ul>
<p>1、导入两个jar包（jstl.jar  standard.jar）、放在web/WEB-INF</p>
<p>2、在JSP页面引入</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br></pre></td></tr></table></figure>

<p>3、直接使用  </p>
<ul>
<li>JSTL优点</li>
</ul>
<blockquote>
<p>提供统一标签<br>用于编写各种动态功能</p>
</blockquote>
<ul>
<li>JSTL常用标签</li>
</ul>
<p>set:向域中对象添加数据</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;set值&quot;</span> scope=<span class="string">&quot;request&quot;</span>&gt;&lt;/c:set&gt;</span><br><span class="line">    $&#123;requestScope.name&#125;</span><br></pre></td></tr></table></figure>

<p>out:输出域对象中的数据</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;c:out value=<span class="string">&quot;$&#123;name&#125;&quot;</span> <span class="keyword">default</span>=<span class="string">&quot;未定义&quot;</span>&gt;&lt;/c:out&gt;</span><br></pre></td></tr></table></figure>

<p>remove:删除域对象中的数据</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;c:remove <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> scope=<span class="string">&quot;page&quot;</span>&gt;&lt;/c:remove&gt;</span><br></pre></td></tr></table></figure>

<p>catch:异常捕获</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;c:<span class="keyword">catch</span> <span class="keyword">var</span>=<span class="string">&quot;exception&quot;</span>&gt;</span><br><span class="line">            &lt;%</span><br><span class="line">                <span class="keyword">int</span> a = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">            %&gt;</span><br><span class="line">        &lt;/c:<span class="keyword">catch</span>&gt;</span><br><span class="line">        $&#123;exception&#125;</span><br></pre></td></tr></table></figure>

<p>forEach:迭代标签</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;c:forEach items=<span class="string">&quot;$&#123;map&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;user&quot;</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.id&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.name&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.score&#125;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h2><ul>
<li>功能</li>
</ul>
<blockquote>
<p>拦截传入的请求和传出的响应<br>修改或以某种方式处理正在客户端和服务器之间交换的数据流</p>
</blockquote>
<ul>
<li>Filter接口的实现</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Filter配置方法</li>
</ul>
<p><strong>web.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>myFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.dream.xiaobo.filter.MyFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>myFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注解</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebFilter(&quot;*&quot;)</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注解可以简化配置、但是web.xml配置可以控制Filter的执行先后顺序、而注解无法控制Filter执行先后顺序</p>
</blockquote>
<ul>
<li>Filter基本的使用场景</li>
</ul>
<p><strong>统一处理资源乱码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><strong>屏蔽敏感词汇</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String name = request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">name.replaceAll(<span class="string">&quot;敏感词&quot;</span>,<span class="string">&quot;***&quot;</span>);</span><br><span class="line">request.setAttribute(<span class="string">&quot;name&quot;</span>,name);</span><br><span class="line">filterChain.doFilter(request, response);</span><br></pre></td></tr></table></figure>

<p>控制资源访问权限</p>
<h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><ul>
<li>流程</li>
</ul>
<p>1、input设置为file </p>
<p>2、form表单method设置为post、get请求发送的是文件名给服务端、而不是文件本身、所以必须用post  </p>
<p>3、form表单enctype设置为multipart/form-data,以二进制的形式传输数据</p>
<ul>
<li>底层大致流程</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;首页&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;form action=<span class="string">&quot;uploadServlet&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;desc&quot;</span> /&gt;&lt;/br&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;img&quot;</span> /&gt;&lt;/br&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span>&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/uploadServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        ServletInputStream inputStream = req.getInputStream();</span><br><span class="line">        InputStreamReader inputStreamReader = <span class="keyword">new</span> InputStreamReader(inputStream);</span><br><span class="line">        BufferedReader bufferedReader = <span class="keyword">new</span> BufferedReader(inputStreamReader);</span><br><span class="line"></span><br><span class="line">        String path = req.getServletContext().getRealPath(<span class="string">&quot;file/xiaobo.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        OutputStream outputStream = <span class="keyword">new</span> FileOutputStream(path);</span><br><span class="line">        OutputStreamWriter outputStreamWriter = <span class="keyword">new</span> OutputStreamWriter(outputStream);</span><br><span class="line">        BufferedWriter bufferedWriter = <span class="keyword">new</span> BufferedWriter(outputStreamWriter);</span><br><span class="line"></span><br><span class="line">        String temp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span>((temp = bufferedReader.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            bufferedWriter.write(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        bufferedWriter.close();</span><br><span class="line">        outputStreamWriter.close();</span><br><span class="line">        outputStream.close();</span><br><span class="line">        bufferedReader.close();</span><br><span class="line">        inputStreamReader.close();</span><br><span class="line">        inputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>组件实现流程</li>
</ul>
<blockquote>
<p>web/WEB-INF下导入jar<br>commons-fileupload-1.3.1<br>commons-io-2.5</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;首页&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;form action=<span class="string">&quot;upload&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;desc&quot;</span> /&gt;&lt;/br&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;img&quot;</span> /&gt;&lt;/br&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span>&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/upload&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DiskFileItemFactory diskFileItemFactory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line">            ServletFileUpload fileUpload = <span class="keyword">new</span> ServletFileUpload(diskFileItemFactory);</span><br><span class="line">            List&lt;FileItem&gt; fileItems = fileUpload.parseRequest(req);</span><br><span class="line">            <span class="keyword">for</span>(FileItem fileItem: fileItems)&#123;</span><br><span class="line">                <span class="keyword">if</span>(fileItem.isFormField())&#123;</span><br><span class="line">                    String name = fileItem.getName();</span><br><span class="line">                    String fieldName = fileItem.getFieldName();</span><br><span class="line">                    System.out.println(name + <span class="string">&quot;:&quot;</span> + fieldName);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    String name = fileItem.getName();</span><br><span class="line">                    InputStream inputStream = fileItem.getInputStream();</span><br><span class="line">                    String path = req.getServletContext().getRealPath(<span class="string">&quot;file/&quot;</span> + name);</span><br><span class="line">                    System.out.println(path);</span><br><span class="line">                    OutputStream outputStream = <span class="keyword">new</span> FileOutputStream(path);</span><br><span class="line">                    <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">while</span>((temp = inputStream.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">                        System.out.println(temp);</span><br><span class="line">                        outputStream.write(temp);</span><br><span class="line">                    &#125;</span><br><span class="line">                    outputStream.close();</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                    System.out.println(<span class="string">&quot;上传成功&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileUploadException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h2><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;下载&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;/download?type=png&quot;</span>&gt;<span class="number">1.</span>png&lt;/a&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;/download?type=txt&quot;</span>&gt;xiaobo.txt&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/download&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDownload</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        String type = req.getParameter(<span class="string">&quot;type&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String fileName = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;png&quot;</span>:</span><br><span class="line">                fileName = <span class="string">&quot;微信截图_20210618143454.png&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;txt&quot;</span>:</span><br><span class="line">                fileName = <span class="string">&quot;xiaobo.txt&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置响应⽅式</span></span><br><span class="line">        resp.setContentType(<span class="string">&quot;application/x-msdownload&quot;</span>);</span><br><span class="line">        <span class="comment">//设置下载之后的⽂件名</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>,<span class="string">&quot;attachment;filename=&quot;</span>+fileName);</span><br><span class="line">        <span class="comment">//获取输出流</span></span><br><span class="line">        OutputStream outputStream = resp.getOutputStream();</span><br><span class="line">        String path = req.getServletContext().getRealPath(<span class="string">&quot;file/&quot;</span>+fileName);</span><br><span class="line">        InputStream inputStream = <span class="keyword">new</span> FileInputStream(path);</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>((temp=inputStream.read())!=-<span class="number">1</span>)&#123;</span><br><span class="line">            outputStream.write(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        inputStream.close(); outputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>正确的开始、微小的长进、然后持续、嘿、我是小博、带你一起看我目之所及的世界……</strong></p>
]]></content>
      <tags>
        <tag>javaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>Servlet&amp;JSP&amp;Session&amp;Cookie</title>
    <url>/posts/3563979080/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20210613165951.4zc06xnby6w0.png" alt="javaWeb"></p>
<!--sleep-->

<span id="more"></span>

<h1 id="Java-Web"><a href="#Java-Web" class="headerlink" title="Java Web"></a>Java Web</h1><h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><blockquote>
<p>一个与平台无关的组件、运行在Servlet容器/Web应用服务器/Tomcat、负责与客户端进行通信  </p>
</blockquote>
<h3 id="Servlet功能"><a href="#Servlet功能" class="headerlink" title="Servlet功能"></a>Servlet功能</h3><blockquote>
<p>创建并返回基于客户请求的动态HTML页面<br>与数据库进行通信</p>
</blockquote>
<h3 id="Servlet使用"><a href="#Servlet使用" class="headerlink" title="Servlet使用"></a>Servlet使用</h3><blockquote>
<p>Servlet本身是一个接口、如果一个类实现了这个接口、则这个类就具备了接受客户端请求及做出响应的功能</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是无参构造、我创建对象&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化Servlet</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;报告后台工作人员、我Servlet已初始化&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Servlet执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String id = servletRequest.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="comment">//汉字编码转换</span></span><br><span class="line">        servletResponse.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;我已收到你传入的参数：&quot;</span> + id );</span><br><span class="line">        servletResponse.getWriter().write(<span class="string">&quot;您好用户、我们后台已收到您的反馈、请您耐心等待&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Servlet销毁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;报告后台工作人员、我Servlet已经销毁&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Servlet不能直接访问Servlet文件、只能通过映射方式来访问</strong></p>
<ul>
<li>XML配置映射关系</li>
</ul>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>MyServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.dream.xiaobo.Servlet.MyServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>MyServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/myServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>注解配置映射关系</li>
</ul>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@WebServlet(&quot;/myServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123; &#125;</span><br></pre></td></tr></table></figure>

<h3 id="Servlet生命周期"><a href="#Servlet生命周期" class="headerlink" title="Servlet生命周期"></a>Servlet生命周期</h3><blockquote>
<p>1、调用init方法完成初始化操作<br> 2、调用service方法完成业务逻辑操作<br> 3、关闭tomcat时、调用destory方法、释放当前对象所占资源  </p>
</blockquote>
<ul>
<li>当浏览器访问Servlet时、Tomcat会查询当前Servlet实例化对象是否存在、如果不存在则通过反射机制动态创建对象、如果存在、则直接调用service方法执行业务逻辑操作</li>
</ul>
<h3 id="Servlet生命周期中方法的执行"><a href="#Servlet生命周期中方法的执行" class="headerlink" title="Servlet生命周期中方法的执行"></a>Servlet生命周期中方法的执行</h3><blockquote>
<p>无参构造：无参构造只调用一次、创建对象<br> init：init方法只调用一次、初始化对象<br> service：service方法被调用N次、执行业务逻辑<br> destory：destory只调用一次、释放对象</p>
</blockquote>
<h3 id="ServletConfig"><a href="#ServletConfig" class="headerlink" title="ServletConfig"></a>ServletConfig</h3><blockquote>
<p>ServletConfig是一个接口、该接口用来描述Servlet基本信息</p>
</blockquote>
<h3 id="ServletConfig中使用方法"><a href="#ServletConfig中使用方法" class="headerlink" title="ServletConfig中使用方法"></a>ServletConfig中使用方法</h3><blockquote>
<p>getServletName():返回Servlet的名称、全类名<br> getInitParameter(String key):获取init参数值<br> getInitParameterNames()返回所有的InitParamter的name值、用于遍历init初始化参数  </p>
</blockquote>
<h3 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h3><blockquote>
<p>Servlet的上下文、是个Servlet的管理者</p>
</blockquote>
<h3 id="ServletConfig和ServletContext的区别"><a href="#ServletConfig和ServletContext的区别" class="headerlink" title="ServletConfig和ServletContext的区别"></a>ServletConfig和ServletContext的区别</h3><blockquote>
<p>ServletConfig:作用于某个Servlet实例、每个Servlet都有对应的ServletConfig、局部对象<br> ServletContext：作用于整个Web应用、一个Web应用对应一个ServletContext、多个Servlet实例对应一个ServletContext、全局对象</p>
</blockquote>
<h3 id="Servlet层次结构"><a href="#Servlet层次结构" class="headerlink" title="Servlet层次结构"></a>Servlet层次结构</h3><blockquote>
<p>Servlet ——&gt; GenericServlet ——&gt; HttpServlet</p>
</blockquote>
<h3 id="HTTP常见的请求类型"><a href="#HTTP常见的请求类型" class="headerlink" title="HTTP常见的请求类型"></a>HTTP常见的请求类型</h3><blockquote>
<p>GET：读取<br> POST：保存<br> PUT：修改<br> DELETE：删除</p>
</blockquote>
<h4 id="大致流程描述"><a href="#大致流程描述" class="headerlink" title="大致流程描述"></a>大致流程描述</h4><blockquote>
<p>GenenricServlet实现Servlet接口、同时为它的子类屏蔽不常用的方法、子类只需重写service方法即可<br> HttpServlet继承GenericServlet、根据请求类型进行分发处理、GET请求进入doGet方法、POST请求进入doPost方法<br> 所以我们自定义的Servlet只需调用HttpServlet即可</p>
</blockquote>
<h3 id="大致工作流程演示"><a href="#大致工作流程演示" class="headerlink" title="大致工作流程演示"></a>大致工作流程演示</h3> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyGenerisServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyHttpServlet</span> <span class="keyword">extends</span> <span class="title">MyGenerisServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        HttpServletRequest httpServletRequest = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse httpServletResponse = (HttpServletResponse) servletResponse;</span><br><span class="line">        String method = httpServletRequest.getMethod();</span><br><span class="line">        <span class="keyword">switch</span> (method)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">                doGet(httpServletRequest,httpServletResponse);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">                doPost(httpServletRequest,httpServletResponse);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        httpServletResponse.getWriter().write(<span class="string">&quot;GET请求&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        httpServletResponse.getWriter().write(<span class="string">&quot;POST请求&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/TestServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServlet</span> <span class="keyword">extends</span> <span class="title">MyHttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        httpServletResponse.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        httpServletResponse.getWriter().write(<span class="string">&quot;我收到您发的GET请求了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        httpServletResponse.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        httpServletResponse.getWriter().write(<span class="string">&quot;我收到您发的POST请求了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h2><blockquote>
<p>JSP本质就是一个Servlet、JSP主要负责与用户交互、最终将页面呈现给用户 HTML+CSS+JS+java混合的文件<br> 当服务器接受到一个后缀JSP请求、将请求交给JSP引擎去处理、每一个JSP页面第一次被访问时、JSP引擎会将它翻译成一个Servlet文件、在有Web容器调用Servlet完成响应</p>
</blockquote>
<h3 id="JSP脚本、执行Java逻辑代码"><a href="#JSP脚本、执行Java逻辑代码" class="headerlink" title="JSP脚本、执行Java逻辑代码"></a>JSP脚本、执行Java逻辑代码</h3><blockquote>
<p>&lt;% java代码 %&gt;</p>
</blockquote>
<h3 id="JSP声明：定义java方法"><a href="#JSP声明：定义java方法" class="headerlink" title="JSP声明：定义java方法"></a>JSP声明：定义java方法</h3><blockquote>
<p>&lt;%! 声明方法 %&gt;</p>
</blockquote>
<h3 id="JSP表达式：把Java对象直接输出到HTML页面中"><a href="#JSP表达式：把Java对象直接输出到HTML页面中" class="headerlink" title="JSP表达式：把Java对象直接输出到HTML页面中"></a>JSP表达式：把Java对象直接输出到HTML页面中</h3><blockquote>
<p>&lt;%= java变量 %&gt;</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyJsp</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyJsp</span><span class="params">(<span class="keyword">int</span> id, String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.dream.xiaobo.jsp.MyJsp&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.List&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;小博来复习JavaWeb了&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">      &lt;h1 style=<span class="string">&quot;color: red&quot;</span>&gt;Hello Java Web&lt;/h1&gt;</span><br><span class="line">  &lt;table&gt;</span><br><span class="line">      &lt;tr style=<span class="string">&quot;color: red&quot;</span>&gt;</span><br><span class="line">          &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;%</span><br><span class="line">        List&lt;MyJsp&gt; list = <span class="keyword">new</span> ArrayList&lt;MyJsp&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> MyJsp(<span class="number">1</span>,<span class="string">&quot;小博&quot;</span>,<span class="number">21</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> MyJsp(<span class="number">2</span>,<span class="string">&quot;小张&quot;</span>,<span class="number">22</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> MyJsp(<span class="number">3</span>,<span class="string">&quot;小金&quot;</span>,<span class="number">24</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">      %&gt;</span><br><span class="line">      &lt;tr style=<span class="string">&quot;color: blue&quot;</span>&gt;</span><br><span class="line">          &lt;td&gt;&lt;%=list.get(i).getId()%&gt;&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;&lt;%=list.get(i).getName()%&gt;&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;&lt;%=list.get(i).getAge()%&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;%</span><br><span class="line">          &#125;</span><br><span class="line">      %&gt;</span><br><span class="line">  &lt;/table&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="JSP内置对象9个"><a href="#JSP内置对象9个" class="headerlink" title="JSP内置对象9个"></a>JSP内置对象9个</h3><table>
<thead>
<tr>
<th>方法</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>request</td>
<td>表示一次请求、HttpServletRequest</td>
</tr>
<tr>
<td>response</td>
<td>表示一次响应、HttpServletResponse</td>
</tr>
<tr>
<td>pageContext</td>
<td>页面上下文、获取页面信息、pageContext</td>
</tr>
<tr>
<td>session</td>
<td>表示一次会话、保存用户信息、HttpSession</td>
</tr>
<tr>
<td>appliction</td>
<td>表时当前Web应用、全局对象、保存所有用户共享信息、ServletContext</td>
</tr>
<tr>
<td>config</td>
<td>当前JSP对应的Servlet的ServletConfig对象、获取当前Servlet的信息</td>
</tr>
<tr>
<td>out</td>
<td>向浏览器输出数据、JspWriter</td>
</tr>
<tr>
<td>page</td>
<td>当前JSP对应的Servlet对象、Servlet</td>
</tr>
<tr>
<td>execption</td>
<td>表示JSP页面发生的异常、Exception</td>
</tr>
</tbody></table>
<h3 id="Request常用方法"><a href="#Request常用方法" class="headerlink" title="Request常用方法"></a>Request常用方法</h3><table>
<thead>
<tr>
<th>方法</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>String getParameter（String key）</td>
<td>获取客户端传来的参数</td>
</tr>
<tr>
<td>void setAttribute（String key,Object value）</td>
<td>通过键值对的形式保存数据</td>
</tr>
<tr>
<td>Object getAttribute（String key）</td>
<td>通过key取出value</td>
</tr>
<tr>
<td>RequestDispatcher gerRequestDispatcher（String path）</td>
<td>返回一个RequestDispatcher对象、该对象的forward方法用于请求转发</td>
</tr>
<tr>
<td>String[] getParameterValues()</td>
<td>获取客户端传来的多个同名参数</td>
</tr>
<tr>
<td>void setCharacterEncoding(String charset)</td>
<td>指定每个请求的编码</td>
</tr>
</tbody></table>
<h3 id="HTTP请求状态码"><a href="#HTTP请求状态码" class="headerlink" title="HTTP请求状态码"></a>HTTP请求状态码</h3><ul>
<li>200: 正常</li>
<li>403：无权限</li>
<li>404：资源找不到</li>
<li>400：请求类型不匹配</li>
<li>500：程序抛出异常</li>
</ul>
<h3 id="Response常用方法"><a href="#Response常用方法" class="headerlink" title="Response常用方法"></a>Response常用方法</h3><blockquote>
<p>sendRedirect（String path）重定向、页面之间的跳转</p>
</blockquote>
<h3 id="转发和重定向的区别"><a href="#转发和重定向的区别" class="headerlink" title="转发和重定向的区别"></a>转发和重定向的区别</h3><blockquote>
<p>转发是将同一个请求传给下一个页面<br>重定向是创建一个新的请求传给下一个页面、之前的请求结束生命周期<br>转发：同一个请求在服务器之间传递、地址栏不变、服务器跳转<br>重定向：由客户端发送一次新的请求来访问跳转后的目标资源、地址栏发生改变、客户端跳转  </p>
</blockquote>
<h3 id="简单实现登录模拟转发和重定向"><a href="#简单实现登录模拟转发和重定向" class="headerlink" title="简单实现登录模拟转发和重定向"></a>简单实现登录模拟转发和重定向</h3><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;请登录&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 style=<span class="string">&quot;color: aqua&quot;</span>&gt;请您登陆&lt;/h1&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/testServlet&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        账号：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;userName&quot;</span> placeholder=<span class="string">&quot;请输入账号&quot;</span> /&gt;&lt;br&gt;</span><br><span class="line">        密码：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;passWord&quot;</span> placeholder=<span class="string">&quot;请输入密码&quot;</span> /&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/testServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String userName = req.getParameter(<span class="string">&quot;userName&quot;</span>);</span><br><span class="line">        String passWord = req.getParameter(<span class="string">&quot;passWord&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(userName.equals(<span class="string">&quot;admin&quot;</span>) &amp;&amp; passWord.equals(<span class="string">&quot;xiaobo&quot;</span>)) &#123;</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/index.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;/login.jsp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.dream.xiaobo.jsp.MyJsp&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.List&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;小博来复习JavaWeb了&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">      &lt;h1 style=<span class="string">&quot;color: red&quot;</span>&gt;Hello Java Web&lt;/h1&gt;</span><br><span class="line">  &lt;table&gt;</span><br><span class="line">      &lt;tr style=<span class="string">&quot;color: red&quot;</span>&gt;</span><br><span class="line">          &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;%</span><br><span class="line">        List&lt;MyJsp&gt; list = <span class="keyword">new</span> ArrayList&lt;MyJsp&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> MyJsp(<span class="number">1</span>,<span class="string">&quot;小博&quot;</span>,<span class="number">21</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> MyJsp(<span class="number">2</span>,<span class="string">&quot;小张&quot;</span>,<span class="number">22</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> MyJsp(<span class="number">3</span>,<span class="string">&quot;小金&quot;</span>,<span class="number">24</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">      %&gt;</span><br><span class="line">      &lt;tr style=<span class="string">&quot;color: blue&quot;</span>&gt;</span><br><span class="line">          &lt;td&gt;&lt;%=list.get(i).getId()%&gt;&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;&lt;%=list.get(i).getName()%&gt;&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;&lt;%=list.get(i).getAge()%&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;%</span><br><span class="line">          &#125;</span><br><span class="line">      %&gt;</span><br><span class="line">  &lt;/table&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Session（用户会话）"><a href="#Session（用户会话）" class="headerlink" title="Session（用户会话）"></a>Session（用户会话）</h2><blockquote>
<p>客户端和服务器之间发生的一系列连续的请求和响应的过程、打开浏览器进行操作到关闭浏览器的过程</p>
</blockquote>
<h3 id="会话状态"><a href="#会话状态" class="headerlink" title="会话状态"></a>会话状态</h3><blockquote>
<p>服务器和浏览器在会话过程中产生的状态信息、借助会话状态、服务器把属于同一次会话的一系列请求和响应关联系起来</p>
</blockquote>
<p><strong>实现会话的两种形式</strong></p>
<ul>
<li>Session</li>
<li>Cookie</li>
</ul>
<h3 id="Session常用的方法"><a href="#Session常用的方法" class="headerlink" title="Session常用的方法"></a>Session常用的方法</h3><table>
<thead>
<tr>
<th>方法</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>String getId()</td>
<td>获取SessionID</td>
</tr>
<tr>
<td>void setMaxInactiveInterval(int interval)</td>
<td>设置Session的失效时间、单位为秒</td>
</tr>
<tr>
<td>int getMaxInactiveInterval()</td>
<td>获取Session的失效时间</td>
</tr>
<tr>
<td>void invalldate()</td>
<td>设置Session立即失效</td>
</tr>
<tr>
<td>Object getAttribute(String key)</td>
<td>通过键获取对应的数据</td>
</tr>
<tr>
<td>void removeAttribute(String key)</td>
<td>通过键删除对应的数据</td>
</tr>
</tbody></table>
<h3 id="Session简单应用"><a href="#Session简单应用" class="headerlink" title="Session简单应用"></a>Session简单应用</h3><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;登录&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 style=<span class="string">&quot;color: red&quot;</span>&gt;请登录&lt;/h1&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;loginServlet&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;table style=<span class="string">&quot;color: blue&quot;</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;userName&quot;</span> placeholder=<span class="string">&quot;请输入用户用&quot;</span> /&gt;&lt;br&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;passWord&quot;</span> placeholder=<span class="string">&quot;请输入密码&quot;</span> /&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span> /&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span> /&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String myUserName;</span><br><span class="line">    <span class="keyword">private</span> String myPassWord;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        myUserName = config.getInitParameter(<span class="string">&quot;userName&quot;</span>);</span><br><span class="line">        myPassWord = config.getInitParameter(<span class="string">&quot;passWord&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.getSession().invalidate();</span><br><span class="line">        resp.sendRedirect(<span class="string">&quot;login.jsp&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String userName = req.getParameter(<span class="string">&quot;userName&quot;</span>);</span><br><span class="line">        String passWord = req.getParameter(<span class="string">&quot;passWord&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(userName.equals(myUserName) &amp;&amp; passWord.equals(myPassWord))&#123;</span><br><span class="line">            HttpSession session = req.getSession();</span><br><span class="line">            session.setAttribute(<span class="string">&quot;userName&quot;</span>, userName);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/index.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;login.jsp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.dream.xiaobo.session.LoginServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>userName<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>passWord<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>xiaobo<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/loginServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;首页&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1 style=<span class="string">&quot;color: aqua&quot;</span>&gt;欢迎来到</span><br><span class="line">        &lt;%= request.getSession().getAttribute(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line">        %&gt;</span><br><span class="line">        的世界&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;a href=<span class="string">&quot;/loginServlet&quot;</span>&gt;登出&lt;/a&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><blockquote>
<p>Cookie是服务器端在HTTP响应中附带传给浏览器的一文本文件、一旦浏览器保存某个Cookie、在之后的请求和响应中、会将Cookie来回传递、进而通过Cookie这个载体完成客户端和服务端的数据交互</p>
</blockquote>
<h3 id="Cookie创建"><a href="#Cookie创建" class="headerlink" title="Cookie创建"></a>Cookie创建</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;xiaobo&quot;</span>);</span><br><span class="line">        resp.addCookie(cookie);</span><br></pre></td></tr></table></figure>

<h3 id="Cookie读取"><a href="#Cookie读取" class="headerlink" title="Cookie读取"></a>Cookie读取</h3><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        <span class="keyword">for</span> (Cookie cookie : cookies)&#123;</span><br><span class="line">            out.write(cookie.getName() + <span class="string">&quot;\t&quot;</span> + cookie.getValue() + <span class="string">&quot;&lt;/br&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br></pre></td></tr></table></figure>

<h3 id="Cookie常用方法"><a href="#Cookie常用方法" class="headerlink" title="Cookie常用方法"></a>Cookie常用方法</h3><table>
<thead>
<tr>
<th>方法</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>void setMaxAge(int age)</td>
<td>设置Cookie有效时间、单位为秒</td>
</tr>
<tr>
<td>int getMaxAge()</td>
<td>获取Cookie的有效时间</td>
</tr>
<tr>
<td>String getName()</td>
<td>获取Cookie的name</td>
</tr>
<tr>
<td>String getValue()</td>
<td>获取Cookie的value</td>
</tr>
</tbody></table>
<h2 id="Session和Cookie的区别"><a href="#Session和Cookie的区别" class="headerlink" title="Session和Cookie的区别"></a>Session和Cookie的区别</h2><h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><blockquote>
<p>保存在服务器<br>保存的数据是Object<br>随着会话的结束而销毁<br>保存着重要信息   </p>
</blockquote>
<h4 id="存储用户信息"><a href="#存储用户信息" class="headerlink" title="存储用户信息"></a>存储用户信息</h4><ul>
<li>存</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;xiaobo&quot;</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li>取</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">getAttribute(<span class="string">&quot;name&quot;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>生命周期</li>
</ul>
<blockquote>
<p>服务器端：只要Web应用程序关闭、就销毁<br>客户端：只要关闭浏览器就销毁  </p>
</blockquote>
<ul>
<li>退出登录<br><strong>invalidate()</strong></li>
</ul>
<h3 id="Cookie-1"><a href="#Cookie-1" class="headerlink" title="Cookie"></a>Cookie</h3><blockquote>
<p>保存在浏览器<br>保存的数据是String<br>可以长期保存在浏览器中、与会话无关<br>保存不重要信息</p>
</blockquote>
<h4 id="存储用户信息-1"><a href="#存储用户信息-1" class="headerlink" title="存储用户信息"></a>存储用户信息</h4><ul>
<li>存</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">addCookie(<span class="keyword">new</span> Cookie(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;xiaobo&quot;</span>))</span><br></pre></td></tr></table></figure>

<ul>
<li>取</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Cookie[] cookies = request.getCookies();</span><br><span class="line">        <span class="keyword">for</span> (Cookie cookie : cookies)&#123;</span><br><span class="line">            out.write(cookie.getName() + <span class="string">&quot;\t&quot;</span> + cookie.getValue());</span><br></pre></td></tr></table></figure>

<ul>
<li>生命周期</li>
</ul>
<blockquote>
<p>服务器端：服务器关闭时Cookie不被销毁<br>客户端：默认时只要浏览器关闭时就销毁、但是可以通过setMaxAge()方法设置有效期、一旦设置到了有效期就有设置的时间决定什么时候销毁了</p>
</blockquote>
<ul>
<li>退出登录<br><strong>setMaxAge(0)</strong></li>
</ul>
]]></content>
      <tags>
        <tag>javaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>集合框架&amp;泛型</title>
    <url>/posts/29725478/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/20210612/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20210611081249.5nv13ksuk5k0.png" alt="集合框架&amp;泛型"></p>
<!--sleep-->

<span id="more"></span>

<h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><blockquote>
<p>一个长度可以改变、可以保持任意数据类型的动态数组</p>
</blockquote>
<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><table>
<thead>
<tr>
<th>接口</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>Collection</td>
<td>集合框架最基础的接口、最顶层的接口</td>
</tr>
<tr>
<td>List</td>
<td>Collection的子接口、存储有序、不唯一（元素可重复）的对象、最常用的接口</td>
</tr>
<tr>
<td>Set</td>
<td>Collection的子接口、存储无序、唯一（元素不可重复）的对象</td>
</tr>
<tr>
<td>Map</td>
<td>独立于Collection的另一个接口、最顶层的接口、存储一组键值对、提供键到值的映射</td>
</tr>
<tr>
<td>lerator</td>
<td>输出集合元素的接口、一般适用于无序集合、从前往后输出</td>
</tr>
<tr>
<td>Listterator</td>
<td>lterator子接口、可以双向输出集合中的元素</td>
</tr>
<tr>
<td>Enumeration</td>
<td>传统的输出接口、已经被lterator取代</td>
</tr>
<tr>
<td>SortedSet</td>
<td>Set的子接口、可以对集合中的元素进行排序</td>
</tr>
<tr>
<td>Queue</td>
<td>队列接口</td>
</tr>
<tr>
<td>Map.Entry</td>
<td>Map的内部接口、描述Map中存储的一组键值对元素</td>
</tr>
</tbody></table>
<h2 id="Collection接口"><a href="#Collection接口" class="headerlink" title="Collection接口"></a>Collection接口</h2><blockquote>
<p>最基础的父接口、可以存储一组无序、不唯一的对象<br>是Lterable接口的子接口</p>
</blockquote>
<h2 id="Collection接口常用方法"><a href="#Collection接口常用方法" class="headerlink" title="Collection接口常用方法"></a>Collection接口常用方法</h2><table>
<thead>
<tr>
<th>方法</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>int size()</td>
<td>获取集合长度</td>
</tr>
<tr>
<td>boolean isEmpty()</td>
<td>判断集合中是否存在某个对象</td>
</tr>
<tr>
<td>Iterator iterator()</td>
<td>实例化Iterator接口、遍历集合</td>
</tr>
<tr>
<td>Object[] toArray()</td>
<td>将集合转换为一个Object数组</td>
</tr>
<tr>
<td>T[] toArray(T[] a)</td>
<td>将集合转换为一个指定数据类型的数组</td>
</tr>
<tr>
<td>boolean add(E e)</td>
<td>向集合中添加元素</td>
</tr>
<tr>
<td>boolean reomove(Object o)</td>
<td>从集合中删除元素</td>
</tr>
<tr>
<td>boolean containsAll(Collection c)</td>
<td>判断集合中是否存在另一个集合的所有元素</td>
</tr>
<tr>
<td>boolean addAll(Collection c)</td>
<td>向集合中添加某个集合的所有元素</td>
</tr>
<tr>
<td>boolean removeAll(Collection c)</td>
<td>从集合中删除某个集合的所有元素</td>
</tr>
<tr>
<td>void clear()</td>
<td>清除集合中的所有元素</td>
</tr>
<tr>
<td>boolean equals(Collection c)</td>
<td>判断两个集合是否相等</td>
</tr>
<tr>
<td>int hashCode()</td>
<td>返回集合的哈希值</td>
</tr>
</tbody></table>
<h2 id="Collection子接口"><a href="#Collection子接口" class="headerlink" title="Collection子接口"></a>Collection子接口</h2><blockquote>
<p>list:存放有序、不唯一的元素<br>Set:存放无序、唯一的元素<br>Queue:队列接口</p>
</blockquote>
<h2 id="List接口扩展方法"><a href="#List接口扩展方法" class="headerlink" title="List接口扩展方法"></a>List接口扩展方法</h2><table>
<thead>
<tr>
<th>方法</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>T get(int index)</td>
<td>通过下标返回集合中对应位置的元素</td>
</tr>
<tr>
<td>T Set(int index, T element</td>
<td>在集合中的指定位置存入对象</td>
</tr>
<tr>
<td>int indexOf(Object o)</td>
<td>从前向后查找某个对象在集合中的位置</td>
</tr>
<tr>
<td>int lastIndexOf(Object o)</td>
<td>从后向前查找某个对象在集合中的位置</td>
</tr>
<tr>
<td>ListLterator ListLterator()</td>
<td>实例化ListLterator接口、用来遍历List集合</td>
</tr>
<tr>
<td>List subList(int fromIndex, int toIndex)</td>
<td>通过下标截取List集合</td>
</tr>
</tbody></table>
<h2 id="List接口的实现类"><a href="#List接口的实现类" class="headerlink" title="List接口的实现类"></a>List接口的实现类</h2><blockquote>
<p>ArrayList:基于数组的实现、非线程安全、效率高、所有的方法都没有synchronized修饰<br>Vector:线程安全、效率低、实现线程安全直接通过synchronized修饰方法来完成<br>Stack:Vector的子类、实现了栈的数据结构、后进先出<br>LikedList:实现先进先出对列、采用链表形式存储</p>
</blockquote>
<h3 id="Stack操作栈的方法"><a href="#Stack操作栈的方法" class="headerlink" title="Stack操作栈的方法"></a>Stack操作栈的方法</h3><ul>
<li>push：入栈方法  </li>
<li>peek: 取出栈顶元素、将栈顶复制一份取出、去完之后栈内的数据结构不变  </li>
<li>pop: 取出栈顶元素、直接取出栈顶元素、取完之后站内数据减一  </li>
</ul>
<h3 id="ArrayList和LikedList的区别"><a href="#ArrayList和LikedList的区别" class="headerlink" title="ArrayList和LikedList的区别"></a>ArrayList和LikedList的区别</h3><blockquote>
<p>内存中存储的形式不同、ArrayList采用的是数组的方式、LikedList采用的是链表的形式<br>数组在内存中的存储空间是连续的、读取快、增删慢<br>因为数组在内存中是连续的、所以数据可以通过寻址公式很快的找到目标元素的内存地址、因为内存是连续的、所以新增或删除元素、必然需要移动数据、而且数组长度越长、需要移动的元素越多、所以操作越慢<br>链表在内存中存储空间是不连续的，读取慢，增删快<br>链表在内存中是不连续的、没有固定的公式可以使用、要读取只能从第一位开始一直遍历目标元素、数据规模越大、操作越慢<br>增删快、因为只需要重新设置目标元素前后两个结点的后置指针即可、与数据规模无关</p>
</blockquote>
<h3 id="LinkedList和Stack的pop方法区别"><a href="#LinkedList和Stack的pop方法区别" class="headerlink" title="LinkedList和Stack的pop方法区别"></a>LinkedList和Stack的pop方法区别</h3><blockquote>
<p>相同点:都是取出集合中第一个元素<br>不同点:两者的顺序是相反的、Stack是后进先出原则、所以pop方法取出的是最后一个元素、LinkedList是先进先出原则、所以pop方法取出的是第一个元素</p>
</blockquote>
<h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><blockquote>
<p>Set是Collection的子接口、Set集合是以散列的形式存储数据、所以元素是没有顺序的、可以存储一组无序且唯一的数据</p>
</blockquote>
<h2 id="Set常用实现类"><a href="#Set常用实现类" class="headerlink" title="Set常用实现类"></a>Set常用实现类</h2><h3 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h3><blockquote>
<p>存储一组无序且唯一的对象<br>无序：元素的存储顺序和遍历顺序不一致</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashSet hashSet = <span class="keyword">new</span> HashSet();</span><br><span class="line"></span><br><span class="line">        hashSet.add(<span class="string">&quot;Hellol&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;World&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaobo&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;wyb&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaobo&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(hashSet);</span><br><span class="line">        System.out.println(<span class="string">&quot;长度为：&quot;</span> + hashSet.size());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        Iterator iterator = hashSet.iterator();</span><br><span class="line">        <span class="comment">//游标下一个如果不为空则为真</span></span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            <span class="comment">//移动游标</span></span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="LinkedHashSet"><a href="#LinkedHashSet" class="headerlink" title="LinkedHashSet"></a>LinkedHashSet</h3><blockquote>
<p>存储一组有序且唯一的元素<br>有序:元素的存储顺序和遍历顺序一致</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedHashSet hashSet = <span class="keyword">new</span> LinkedHashSet();</span><br><span class="line"></span><br><span class="line">        hashSet.add(<span class="string">&quot;Hellol&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;World&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaobo&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;wyb&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaobo&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(hashSet);</span><br><span class="line">        System.out.println(<span class="string">&quot;长度为：&quot;</span> + hashSet.size());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        Iterator iterator = hashSet.iterator();</span><br><span class="line">        <span class="comment">//游标下一个如果不为空则为真</span></span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            <span class="comment">//移动游标</span></span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="LinkedHashSet-如何判断两个对象是否相等"><a href="#LinkedHashSet-如何判断两个对象是否相等" class="headerlink" title="LinkedHashSet 如何判断两个对象是否相等"></a>LinkedHashSet 如何判断两个对象是否相等</h4><blockquote>
<p>首先会判断两个对象的 hashCode 是否相等<br>如果不相等、则认为不是同一个对象<br>如果相等、在进行equals判断、equals相等、则两对象相等、否则不等</p>
</blockquote>
<h4 id="什么是HashCode"><a href="#什么是HashCode" class="headerlink" title="什么是HashCode"></a>什么是HashCode</h4><blockquote>
<p>将对象的内部信息、通过某种特定规则转换成一个散列值、就是该对象的 hashCode</p>
</blockquote>
<h3 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h3><blockquote>
<p>存储一组有序且唯一的数据<br>有序:集合内部自动对所有的元素按照升序进行排列、无论存入的顺序是什么、遍历的时候都一定按照升序输出</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TreeSet treeSet = <span class="keyword">new</span> TreeSet();</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Data(<span class="number">6</span>));</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Data(<span class="number">5</span>));</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Data(<span class="number">3</span>));</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Data(<span class="number">4</span>));</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Data(<span class="number">2</span>));</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Data(<span class="number">6</span>));</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Data(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        Iterator iterator = treeSet.iterator();</span><br><span class="line">        <span class="keyword">while</span>(iterator.hasNext())&#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Data</span> <span class="keyword">implements</span> <span class="title">Comparable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Data</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//instanceof判断是否是为一个类型</span></span><br><span class="line">    <span class="comment">//对象o是否为Data类型</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回值：</span></span><br><span class="line"><span class="comment">     * 1 表示A大于B</span></span><br><span class="line"><span class="comment">     * 0 表示A等于B</span></span><br><span class="line"><span class="comment">     * -1 表示A小于B</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(o <span class="keyword">instanceof</span> Data)&#123;</span><br><span class="line">            Data data = (Data) o;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.num &gt; data.num)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.num == data.num)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Data&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;num=&quot;</span> + num +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><blockquote>
<p>Map 可以操作一对元素、因为 Map 存储结构是 key - value 映射/<br>Map接口定义时使用了泛型、并且定义了两个泛型K和V、K表示Key键、V表示value值</p>
</blockquote>
<h3 id="Map常用的方法"><a href="#Map常用的方法" class="headerlink" title="Map常用的方法"></a>Map常用的方法</h3><table>
<thead>
<tr>
<th>方法</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td>int size()</td>
<td align="center">获取集合长度</td>
</tr>
<tr>
<td>boolean isEmpty()</td>
<td align="center">判断集合是否为空</td>
</tr>
<tr>
<td>boolean containsKey(Object key)</td>
<td align="center">判断集合中是否存在某个 key</td>
</tr>
<tr>
<td>boolean containsValue(Object value)</td>
<td align="center">判断集合中是否存在某个 value</td>
</tr>
<tr>
<td>V get(Object key)</td>
<td align="center">取出集合中 key 对应的 value</td>
</tr>
<tr>
<td>V put(K key,V value)</td>
<td align="center">向集合中存入一组 key-value 的元素</td>
</tr>
<tr>
<td>V remove(Object key)</td>
<td align="center">删除集合中 key 对应的 value</td>
</tr>
<tr>
<td>void putAll(Map map)</td>
<td align="center">向集合中添加另外一个 Map</td>
</tr>
<tr>
<td>void clear()</td>
<td align="center">清除集合中所有的元素</td>
</tr>
<tr>
<td>Set《k》 keySet()</td>
<td align="center">取出集合中所有的 key，返回一个 Set</td>
</tr>
<tr>
<td>Collection《v》 values()</td>
<td align="center">取出集合中所有的 value，返回一个 Collection</td>
</tr>
<tr>
<td>int hashCode()</td>
<td align="center">获取集合的散列值</td>
</tr>
<tr>
<td>boolean equals(Object o)</td>
<td align="center">比较两个集合是否相等</td>
</tr>
</tbody></table>
<h3 id="Map接口的实现类"><a href="#Map接口的实现类" class="headerlink" title="Map接口的实现类"></a>Map接口的实现类</h3><h4 id="hashMap"><a href="#hashMap" class="headerlink" title="hashMap"></a>hashMap</h4><blockquote>
<p>存储一组无序、key不可以重复、value可以重复的元素<br>非线程安全的、性能高</p>
</blockquote>
<h4 id="hashtable"><a href="#hashtable" class="headerlink" title="hashtable"></a>hashtable</h4><blockquote>
<p>存储一组无序、key不可以重复、value可以重复的元素<br>线程安全的、性能低</p>
</blockquote>
<h4 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h4><blockquote>
<p>存储一组有序、key不可以重复、value可以重复的元素、可以按照key进行排序</p>
</blockquote>
<h2 id="Collections-工具类"><a href="#Collections-工具类" class="headerlink" title="Collections 工具类"></a>Collections 工具类</h2><blockquote>
<p>专门提供一些对集合的操纵、Collections针对集合的工具类<br>Arrays针对数组的工具类</p>
</blockquote>
<h2 id="Collection工具类的常用方法"><a href="#Collection工具类的常用方法" class="headerlink" title="Collection工具类的常用方法"></a>Collection工具类的常用方法</h2><table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>public static sort()</td>
<td>对集合进行排序</td>
</tr>
<tr>
<td>public static int binarySearch(List list,Object v)</td>
<td>查找 v 在 list 中的位置，集合必须是生序排列</td>
</tr>
<tr>
<td>public static get(List list,int index)</td>
<td>返回 list 中 index 位置的值</td>
</tr>
<tr>
<td>public static void reverse(List list)</td>
<td>对 list 进行反序输出</td>
</tr>
<tr>
<td>public static void swap(List list,int i,int j)</td>
<td>交换集合中指定位置的两个元素</td>
</tr>
<tr>
<td>public static void fill(List list,Object obj)</td>
<td>将集合中所有元素替换成 obj</td>
</tr>
<tr>
<td>public static Object min(List list)</td>
<td>返回集合中的最小值</td>
</tr>
<tr>
<td>public static Object max(List list)</td>
<td>返回集合中的最大值</td>
</tr>
<tr>
<td>public static boolean replaceAll(List list,Object old,Object new)</td>
<td>在 list 集合中用 new 替换 old</td>
</tr>
<tr>
<td>public static boolean addAll(List list,Object… obj)</td>
<td>向集合中添加元素</td>
</tr>
</tbody></table>
<h3 id="Object…可变参数"><a href="#Object…可变参数" class="headerlink" title="Object…可变参数"></a>Object…可变参数</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(Object... arg)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>参数可以是任意个数、但是类型必须匹配</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList arrayList = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        Collections.addAll(arrayList,</span><br><span class="line">                            <span class="keyword">new</span> Student(<span class="number">1</span>,<span class="string">&quot;小博&quot;</span>,<span class="number">21</span>),</span><br><span class="line">                            <span class="keyword">new</span> Student(<span class="number">2</span>,<span class="string">&quot;小张&quot;</span>,<span class="number">22</span>),</span><br><span class="line">                            <span class="keyword">new</span> Student(<span class="number">3</span>,<span class="string">&quot;小金&quot;</span>,<span class="number">24</span>)</span><br><span class="line">                );</span><br><span class="line">        Collections.sort(arrayList);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Comparable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(<span class="keyword">int</span> id, String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> Student) &#123;</span><br><span class="line">            Student student = (Student) o;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.age &gt; student.age) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.age == student.age) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6.25tpl5a324tc.png" alt="集合框架"></p>
<h2 id="泛型（Generics）"><a href="#泛型（Generics）" class="headerlink" title="泛型（Generics）"></a>泛型（Generics）</h2><blockquote>
<p>在类定义时不指定类中信息的具体数据类型、而是暂时用一个标识来替代、当外部实例化对象时再来指定具体的数据类型</p>
</blockquote>
<p><strong>直接定义</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> B b;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> C <span class="title">test</span><span class="params">(D d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> C();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>泛型定义</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span>&lt;<span class="title">T</span>,<span class="title">E</span>,<span class="title">M</span>&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">private</span> T b;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> E <span class="title">test</span><span class="params">(M m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> E;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">A&lt;B,C,D&gt; a = <span class="keyword">new</span> A();</span><br></pre></td></tr></table></figure>

<h3 id="使用泛型的优点"><a href="#使用泛型的优点" class="headerlink" title="使用泛型的优点"></a>使用泛型的优点</h3><blockquote>
<p>极大地提升程序的灵活性、提升类的扩展性<br>可以指代成员变量类型、方法的参数类型、方法的返回值类型</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Time</span>&lt;<span class="title">H</span>,<span class="title">M</span>,<span class="title">S</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> H hour;</span><br><span class="line">    <span class="keyword">private</span> M minute;</span><br><span class="line">    <span class="keyword">private</span> S second;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> H <span class="title">getHour</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hour;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHour</span><span class="params">(H hour)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hour = hour;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> M <span class="title">getMinute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> minute;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMinute</span><span class="params">(M minute)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.minute = minute;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> S <span class="title">getSecond</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> second;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSecond</span><span class="params">(S second)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.second = second;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Time&lt;Integer,Integer,Double&gt; time = <span class="keyword">new</span> Time&lt;&gt;();</span><br><span class="line">        time.setHour(<span class="number">99</span>);</span><br><span class="line">        time.setMinute(<span class="number">11</span>);</span><br><span class="line">        time.setSecond(<span class="number">16.0</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;现在时间是：&quot;</span>+time.getHour() + <span class="string">&quot;/&quot;</span> +</span><br><span class="line">                                        time.getMinute() + <span class="string">&quot;:&quot;</span> +</span><br><span class="line">                                        time.getSecond()</span><br><span class="line">                );</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="泛型的通配符"><a href="#泛型的通配符" class="headerlink" title="泛型的通配符"></a>泛型的通配符</h3><blockquote>
<p>?: 表示可以使用任意的泛型类型对象、使其具备通用性<br>多态在泛型中不适用</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list1 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list1.add(<span class="string">&quot;xiaobo&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Integer&gt; list2 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list2.add(<span class="number">21</span>);</span><br><span class="line"></span><br><span class="line">        getList(list1);</span><br><span class="line">        getList(list2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getList</span><span class="params">(ArrayList&lt;?&gt; arrayList)</span></span>&#123;</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="泛型的上限和下限"><a href="#泛型的上限和下限" class="headerlink" title="泛型的上限和下限"></a>泛型的上限和下限</h3><h4 id="上限"><a href="#上限" class="headerlink" title="上限"></a>上限</h4><blockquote>
<p>实例化具体的数据类型、可以是上限类型的子类或者是上限类型的本身、用extends表示、 类名&lt;泛型标识 extends 上限类名&gt;</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">T</span>&lt;<span class="title">M</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        test(<span class="keyword">new</span> T&lt;Integer&gt;());</span><br><span class="line">        test(<span class="keyword">new</span> T&lt;Float&gt;());</span><br><span class="line">        test(<span class="keyword">new</span> T&lt;Double&gt;());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(T&lt;? extends Number&gt; t)</span></span>&#123;</span><br><span class="line">        System.out.println(t);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="下限"><a href="#下限" class="headerlink" title="下限"></a>下限</h4><blockquote>
<p>实例化具体的数据类型、可以是下限类型的父类或者是下限类型的本身、用super表示  类名&lt;泛型标识 super 下限类名&gt;</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">T</span>&lt;<span class="title">M</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        test2(<span class="keyword">new</span> T&lt;Object&gt;());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">(T&lt;? <span class="keyword">super</span> String&gt; t)</span></span>&#123;</span><br><span class="line">        System.out.println(t);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h3 id="泛型接口"><a href="#泛型接口" class="headerlink" title="泛型接口"></a>泛型接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyInterface</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getValue</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="实现类在定义时继续使用泛型标识"><a href="#实现类在定义时继续使用泛型标识" class="headerlink" title="实现类在定义时继续使用泛型标识"></a>实现类在定义时继续使用泛型标识</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInterfaceImpl</span> <span class="keyword">implements</span> <span class="title">MyInterface</span>&lt;<span class="title">T</span>&gt;  </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> T obj;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyInterfaceImpl</span><span class="params">(T obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.obj = obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="实现类在定义时直接给出具体的数据类型"><a href="#实现类在定义时直接给出具体的数据类型" class="headerlink" title="实现类在定义时直接给出具体的数据类型"></a>实现类在定义时直接给出具体的数据类型</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInterfaceImpl2</span> <span class="keyword">implements</span> <span class="title">MyInterface</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String obj;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyInterfaceImpl2</span><span class="params">(String obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.obj = obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>正确的开始、微小的长进、然后持续、嘿、我是小博、带你一起看我目之所及的世界……</strong></p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>并发编程总结</title>
    <url>/posts/2215251221/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/%E5%B9%B6%E5%8F%91.3vjf5vr0q2g.png" alt="并发"></p>
<!--sleep-->

<span id="more"></span>

<h1 id="并发编程"><a href="#并发编程" class="headerlink" title="并发编程"></a>并发编程</h1><h2 id="生产者和消费者模式"><a href="#生产者和消费者模式" class="headerlink" title="生产者和消费者模式"></a>生产者和消费者模式</h2><blockquote>
<p>一个生产环境中、生产者和消费者在同一时间段内共享同一块缓冲区、生产者负责向缓冲区添加数据、消费者负责从缓冲区取出数据</p>
</blockquote>
<h3 id="卖汉堡"><a href="#卖汉堡" class="headerlink" title="卖汉堡"></a>卖汉堡</h3><p><strong>汉堡类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hamburger</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hamburger&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Hamburger</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>容器类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Container</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Hamburger[] array = <span class="keyword">new</span> Hamburger[<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向容器中添加汉堡</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(Hamburger hamburger)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(index == array.length)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.notify();</span><br><span class="line">        array[index] = hamburger;</span><br><span class="line">        index++;</span><br><span class="line">        System.out.println(<span class="string">&quot;生产了一个汉堡&quot;</span> + hamburger);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从容器中取出汉堡</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> Hamburger <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(index == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//让正在访问当前资源的线程暂停</span></span><br><span class="line">                <span class="keyword">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//唤醒之前暂停的线程</span></span><br><span class="line">        <span class="keyword">this</span>.notify();</span><br><span class="line">        index--;</span><br><span class="line">        System.out.println(<span class="string">&quot;取出了一个汉堡&quot;</span> + array[index]);</span><br><span class="line">        <span class="keyword">return</span> array[index];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>生产者类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Producer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Container container;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Producer</span><span class="params">(Container container)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.container = container;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将汉堡装进去</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">producer</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++)&#123;</span><br><span class="line">            Hamburger hamburger = <span class="keyword">new</span> Hamburger(i);</span><br><span class="line">            <span class="keyword">this</span>.container.push(hamburger);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>消费者类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Container container;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Consumer</span><span class="params">(Container container)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.container = container;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">consumer</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">this</span>.container.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>测试类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Container container = <span class="keyword">new</span> Container();</span><br><span class="line">        Producer producer = <span class="keyword">new</span> Producer(container);</span><br><span class="line">        Consumer consumer = <span class="keyword">new</span> Consumer(container);</span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            producer.producer();</span><br><span class="line">        &#125;).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            consumer.consumer();</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>必须使用 while 判断，不能用 if，因为 if 会存在线程虚假唤醒的问题，虚假唤醒就是一些 wait 方法会在除了 notify 的其他情况被唤醒，不是真正的唤醒，使用 while 完成多重检测，避免这一问题</p>
<h2 id="高并发"><a href="#高并发" class="headerlink" title="高并发"></a>高并发</h2><h3 id="并发和并行的区别"><a href="#并发和并行的区别" class="headerlink" title="并发和并行的区别"></a>并发和并行的区别</h3><blockquote>
<p>并发（concurrency）:多线程同时操作同一个资源、但并不是真正的同时操作、而是交替操作、单核CPU的情况下、资源按时间段分配给多个线程<br>并行（parallelism）:是真正的多个线程同时执行、多核CPU、每个线程使用一个CPU资源来运行</p>
</blockquote>
<h3 id="高并发标准"><a href="#高并发标准" class="headerlink" title="高并发标准"></a>高并发标准</h3><blockquote>
<p>QPS:每秒响应的HTTP请求数量<br>吞吐量:单位时间内处理的请求数<br>平均响应时间:系统对一个请求作出响应的评价时间<br>并发用户数:同时称在正常使用系统的用户人数<br>QPS = 并发数/平均响应时间</p>
</blockquote>
<h3 id="提高系统并发能力的方式"><a href="#提高系统并发能力的方式" class="headerlink" title="提高系统并发能力的方式"></a>提高系统并发能力的方式</h3><h4 id="垂直扩展"><a href="#垂直扩展" class="headerlink" title="垂直扩展"></a>垂直扩展</h4><blockquote>
<p>提升单机的硬件设备<br>提升单机的架构性能</p>
</blockquote>
<h4 id="水平扩展"><a href="#水平扩展" class="headerlink" title="水平扩展"></a>水平扩展</h4><blockquote>
<p>集群<br>分布式<br>站点层扩展<br>服务层扩展<br>数据层扩展</p>
</blockquote>
<h2 id="并发编程-1"><a href="#并发编程-1" class="headerlink" title="并发编程"></a>并发编程</h2><blockquote>
<p>一种描述使系统允许多个任务可以在重叠的时间段内执行的设计结构、不是指多个任务在同一时间段内执行、而是指系统具备处理多个任务在同一时间段内同时执行的能力</p>
</blockquote>
<h3 id="JUC"><a href="#JUC" class="headerlink" title="JUC"></a>JUC</h3><blockquote>
<p>JDK提供给的一个工具包、用来帮助开发者完成Java并发编程</p>
</blockquote>
<h3 id="进程和线程"><a href="#进程和线程" class="headerlink" title="进程和线程"></a>进程和线程</h3><p><strong>java默认线程数为2个</strong></p>
<blockquote>
<p>main主线程<br>GC垃圾回收机制</p>
</blockquote>
<p><strong>java本身无法开启线程、因为java无法操作硬件、只能通过调用本地方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">start0</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>

<h3 id="实现多线程的几种方法"><a href="#实现多线程的几种方法" class="headerlink" title="实现多线程的几种方法"></a>实现多线程的几种方法</h3><blockquote>
<p>继承Thread类<br>实现Runnable接口<br>实现Callable接口</p>
</blockquote>
<p><strong>实现Runnable接口和Callable接口的区别</strong></p>
<blockquote>
<p>Runnable的run方法没有返回值<br>Callable的call方法有返回值</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCallable</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这是Callable&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello Callable&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyCallable myCallable = <span class="keyword">new</span> MyCallable();</span><br><span class="line">        FutureTask&lt;String&gt; future = <span class="keyword">new</span> FutureTask(myCallable);</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(future);</span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String value = future.get();</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="Callable流程分析"><a href="#Callable流程分析" class="headerlink" title="Callable流程分析"></a>Callable流程分析</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Callable</span>&lt;<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Computes a result, or throws an exception if unable to do so.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> computed result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception if unable to compute a result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">V <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FutureTask</span><span class="params">(Callable&lt;V&gt; callable)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (callable == <span class="keyword">null</span>)</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();</span><br><span class="line">       <span class="keyword">this</span>.callable = callable;</span><br><span class="line">       <span class="keyword">this</span>.state = NEW;       <span class="comment">// ensure visibility of callable</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FutureTask</span>&lt;<span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">RunnableFuture</span>&lt;<span class="title">V</span>&gt; </span>&#123; &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RunnableFuture</span>&lt;<span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">Runnable</span>, <span class="title">Future</span>&lt;<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Sets this Future to the result of its computation</span></span><br><span class="line"><span class="comment">     * unless it has been cancelled.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Thread</span><span class="params">(Runnable target)</span> </span>&#123;</span><br><span class="line">        init(<span class="keyword">null</span>, target, <span class="string">&quot;Thread-&quot;</span> + nextThreadNum(), <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/callable%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B.6yujkl85nyo0.png" alt="callable实现过程"></p>
<h3 id="sleep和wait"><a href="#sleep和wait" class="headerlink" title="sleep和wait"></a>sleep和wait</h3><blockquote>
<p>sleep:让当前线程休眠、不会释放锁<br>wait:让访问当前对象的线程休眠、会释放锁</p>
</blockquote>
<h3 id="synchronized锁"><a href="#synchronized锁" class="headerlink" title="synchronized锁"></a>synchronized锁</h3><blockquote>
<p>synchronized修饰非静态方法、锁定方法的调用者<br>synchronized修饰静态方法、锁定的是类<br>synchronized静态方法和实例方法同时存在、静态方法锁定的是类、实例方法锁定的是对象</p>
</blockquote>
<h3 id="synchronized锁与Lock锁的区别"><a href="#synchronized锁与Lock锁的区别" class="headerlink" title="synchronized锁与Lock锁的区别"></a>synchronized锁与Lock锁的区别</h3><blockquote>
<p>synchronized 自动上锁，自动释放锁，Lock 手动上锁，手动释放锁<br>synchronized 无法判断是否获取到了锁，Lock 可以判断是否拿到了锁<br>synchronized 拿不到锁就会一直等待，Lock 不一定会一直等待<br>synchronized 是 Java 关键字，Lock 是接口<br>synchronized 是非公平锁，Lock 可以设置是否为公平锁  </p>
</blockquote>
<h3 id="Lock锁"><a href="#Lock锁" class="headerlink" title="Lock锁"></a>Lock锁</h3><blockquote>
<p>使用 Lock 锁、就不能通过 wait 和 notify 来暂停线程和唤醒线程、而应该使用 Condition 的 await 和 signal 来暂停和唤醒线程</p>
</blockquote>
<h3 id="ConcurrentModificationException并发访问异常"><a href="#ConcurrentModificationException并发访问异常" class="headerlink" title="ConcurrentModificationException并发访问异常"></a>ConcurrentModificationException并发访问异常</h3><p><strong>例</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    TimeUnit.MILLISECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">                    list.add(<span class="string">&quot;xiaobo&quot;</span>);</span><br><span class="line">                    System.out.println(list);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h4 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List list = <span class="keyword">new</span> Vector();</span><br></pre></td></tr></table></figure>

<p>List.add<br><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/Arraylist.20r5pera9dwg.png" alt="Arraylist"><br>vector.add<br><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/vector.75opbyocskw0.png" alt="vector"></p>
<h4 id="Collections-synchronizedList"><a href="#Collections-synchronizedList" class="headerlink" title="Collections.synchronizedList"></a>Collections.synchronizedList</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list = Collections.synchronizedList(<span class="keyword">new</span> ArrayList&lt;&gt;());</span><br></pre></td></tr></table></figure>

<h4 id="JUC：CopyOnWriteArrayList"><a href="#JUC：CopyOnWriteArrayList" class="headerlink" title="JUC：CopyOnWriteArrayList"></a>JUC：CopyOnWriteArrayList</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> CopyOnWriteArrayList&lt;&gt;();</span><br></pre></td></tr></table></figure>

<blockquote>
<p>CopyOnwrite写时复制、当我们向一个容器中添加元素时、不直接给容器添加、而是现将容器复制一份、向新的容器中添加数据、添加完成后、再将原来的容器引用指向新的容器</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/CopyOnWriteArrayList.1zhgyo6o7xmo.png" alt="CopyOnWriteArrayList"></p>
<h2 id="JUC-工具类"><a href="#JUC-工具类" class="headerlink" title="JUC 工具类"></a>JUC 工具类</h2><h3 id="计数器"><a href="#计数器" class="headerlink" title="计数器"></a>计数器</h3><blockquote>
<p>当两个线程同时执行时、如果要确保一个线程优先执行、可以使用计时器、让一个线程先执行、再让另一个线程执行</p>
</blockquote>
<h4 id="CountDownLatch减法计数器"><a href="#CountDownLatch减法计数器" class="headerlink" title="CountDownLatch减法计数器"></a>CountDownLatch减法计数器</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        CountDownLatch countDownLatch = <span class="keyword">new</span> CountDownLatch(<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;---------------xiaobo&quot;</span>);</span><br><span class="line">                countDownLatch.countDown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            countDownLatch.await();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;wyb---------------&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>new CountDownLatch(100)、coutDown()、await()需要联合使用、必须保证计数器清零、所以coutDown() 的调用次数必须大于等于构造函数的参数值</p>
</blockquote>
<h4 id="CyclicBarrier加法计数器"><a href="#CyclicBarrier加法计数器" class="headerlink" title="CyclicBarrier加法计数器"></a>CyclicBarrier加法计数器</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        CyclicBarrier cyclicBarrier = <span class="keyword">new</span> CyclicBarrier(<span class="number">100</span>,()-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;执行完毕、允许通过&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> temp = i;</span><br><span class="line">                <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;--&gt;&quot;</span> + temp);</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        cyclicBarrier.await();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (BrokenBarrierException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>CyclicBarrier设置一个值、await唤醒其他线程、当await唤醒的线程数达到Cyclicbarrier指定的值时、CyclicBarrier所设置的线程被执行<br>lambda表达式里面不能去访问没有final修饰的变量</p>
</blockquote>
<h3 id="Semaphore记数信号量"><a href="#Semaphore记数信号量" class="headerlink" title="Semaphore记数信号量"></a>Semaphore记数信号量</h3><blockquote>
<p>主要使用它来完成限流操作，限制可以访问某些资源的线程数量<br>三个操作:初始化 new Semaphore(5);<br> 获取许可 semaphore.acquire();<br> 释放 semaphore.release();  </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Semaphore semaphore = <span class="keyword">new</span> Semaphore(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    semaphore.acquire();</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;开始访问&quot;</span>);</span><br><span class="line">                    TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;------退出访问&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">                    semaphore.release();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>首先获取信号量、获取到资源才可以执行、执行完毕后需要释放资源、留给下一个线程</p>
</blockquote>
<h3 id="读写锁"><a href="#读写锁" class="headerlink" title="读写锁"></a>读写锁</h3><blockquote>
<p>接口ReadwriteLock、实现类是ReentrantReadWriteLock<br>可以多线程同时读、但是同一时间内只能有一个线程进行写入操作<br>写入锁又称独占锁、只能被一个线程占用<br>读取锁又称共享锁、多个线程可以同时占用</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cache</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;Integer,String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> ReadWriteLock readWriteLock = <span class="keyword">new</span> ReentrantReadWriteLock();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(Integer key,String value)</span></span>&#123;</span><br><span class="line">        readWriteLock.writeLock().lock();</span><br><span class="line">        System.out.println(key + <span class="string">&quot;开始写入&quot;</span>);</span><br><span class="line">        map.put(key,value);</span><br><span class="line">        System.out.println(key + <span class="string">&quot;写入完毕&quot;</span>);</span><br><span class="line">        readWriteLock.writeLock().unlock();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(Integer key)</span></span>&#123;</span><br><span class="line">        readWriteLock.readLock().lock();</span><br><span class="line">        System.out.println(key + <span class="string">&quot;开始读取&quot;</span>);</span><br><span class="line">        map.get(key);</span><br><span class="line">        System.out.println(key + <span class="string">&quot;读取完毕&quot;</span>);</span><br><span class="line">        readWriteLock.readLock().unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Cache cache = <span class="keyword">new</span> Cache();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> temp = i;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                cache.write(temp,String.valueOf(temp));</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> temp = i;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                cache.read(temp);</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h2><blockquote>
<p>预先创建好一定数量的线程对象、存入缓冲池中、需要用的时候直接从缓冲池中取出、用完之后不要销毁、还回到缓冲池中、为了提高资源的利用率</p>
</blockquote>
<h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><blockquote>
<p>提高线程的利用率<br>提高响应速度<br>便于统一管理线程对象<br>可控制最大并发数</p>
</blockquote>
<h3 id="设计思想"><a href="#设计思想" class="headerlink" title="设计思想"></a>设计思想</h3><blockquote>
<p>核心池的大小<br>线程池的最大容量<br>等待队列<br>拒绝策略</p>
</blockquote>
<h3 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h3><blockquote>
<p>1、线程池初始化的时候创建一定数量的线程对象<br>2、如果缓冲池中没有空闲的线程对象、则新来的任务进入等待队列<br>3、如果缓冲池中没有空闲的线程对象、等待队列也已经填满、可以申请再创建一定数量的新线程对象、直到到达线程池的最大值、这时候如果还有新的任务进来、只能选择拒绝。</p>
</blockquote>
<h3 id="底层ThreadPoolExecutor"><a href="#底层ThreadPoolExecutor" class="headerlink" title="底层ThreadPoolExecutor"></a>底层ThreadPoolExecutor</h3><blockquote>
<p>工具类的Executors 底层都是ThreadPoolExecutor</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/ThreadPoolExecutor.5rbs8mdlg4s0.png" alt="ThreadPoolExecutor"></p>
<h3 id="ThreadPoolExecutor核心参数（7个）"><a href="#ThreadPoolExecutor核心参数（7个）" class="headerlink" title="ThreadPoolExecutor核心参数（7个）"></a>ThreadPoolExecutor核心参数（7个）</h3><blockquote>
<p>corePoolSize:核心池的大小<br>maximumPoolSize:线程池的最大容量<br>keepAliveTime:线程存活时间（在没有任务可执行的情况下）、必须是线程池中的数量大于corePoolSize、才生效<br>TimeUnit:存活时间单位<br>BlockingQueue:等待队列、存储等待执行的任务<br>ThreadFactory:线程工厂、用来创建线程对象<br>RejectedExecutionHandler:拒绝策略</p>
</blockquote>
<h3 id="4种拒绝策略"><a href="#4种拒绝策略" class="headerlink" title="4种拒绝策略"></a>4种拒绝策略</h3><blockquote>
<p>AbortPolicy：直接抛出异常<br>DiscardPolicy：放弃任务，不抛出异常<br>DiscardOldestPolicy：尝试与等待队列中最前面的任务去争夺，不抛出异常<br>CallerRunsPolicy：谁调用谁处理</p>
</blockquote>
<h3 id="JUC工具类提供的线程池"><a href="#JUC工具类提供的线程池" class="headerlink" title="JUC工具类提供的线程池"></a>JUC工具类提供的线程池</h3><h4 id="单例线程池"><a href="#单例线程池" class="headerlink" title="单例线程池"></a>单例线程池</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ExecutorService executorService = Executors.newSingleThreadExecutor();</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/newSingleThreadExecutor.3mo8czsd9de0.png" alt="newSingleThreadExecutor"></p>
<h4 id="指定数量线程池"><a href="#指定数量线程池" class="headerlink" title="指定数量线程池"></a>指定数量线程池</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ExecutorService executorService = Executors.newFixedThreadPool(<span class="number">5</span>);</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/newFixedThreadPool.2hm9813vizy.png" alt="newFixedThreadPool"></p>
<h4 id="缓存线程池"><a href="#缓存线程池" class="headerlink" title="缓存线程池"></a>缓存线程池</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ExecutorService executorService = Executors.newCachedThreadPool();</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/java/newCachedThreadPool.5pplbhuy6880.png" alt="newCachedThreadPool"></p>
<h3 id="自定义线程池"><a href="#自定义线程池" class="headerlink" title="自定义线程池"></a>自定义线程池</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ExecutorService executorService = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 自定义参数</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        executorService = <span class="keyword">new</span> ThreadPoolExecutor(</span><br><span class="line">                <span class="number">2</span>,</span><br><span class="line">                <span class="number">3</span>,</span><br><span class="line">                <span class="number">1L</span>,</span><br><span class="line">                TimeUnit.SECONDS,</span><br><span class="line">                <span class="keyword">new</span> ArrayBlockingQueue&lt;&gt;(<span class="number">2</span>),</span><br><span class="line">                Executors.defaultThreadFactory(),</span><br><span class="line">                <span class="keyword">new</span> ThreadPoolExecutor.AbortPolicy()</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">            executorService.execute(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;开始办理业务&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        executorService.shutdown();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="Volatile关键字"><a href="#Volatile关键字" class="headerlink" title="Volatile关键字"></a>Volatile关键字</h2><blockquote>
<p>Volatile 是 JVM 提供的轻量级同步机制、可见性、主内存对象线程可见  </p>
</blockquote>
<p><strong>一个线程执行完任务之后，会把变量存回到主内存中，并且从主内存中读取当前最新的值，如果是一个空的任务，则不会重新读取主内存中的值</strong></p>
<h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><blockquote>
<p>函数直接或者间接调用函数本身</p>
</blockquote>
<p><strong>需要满足条件</strong></p>
<blockquote>
<p>一个父问题可以拆分成若干个子问题，并且若干子问题的结果汇总起来就是父问题的答案<br>父问题和子问题，解题思路必须完全一致，只是数据规模不同<br>存在终止条件、问题在不断拆分的同时，一定要在某个节点终止拆分</p>
</blockquote>
<p><strong>正确的开始、微小的长进、然后持续、嘿、我是小博、带你一起看我目之所及的世界……</strong></p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>みんなの日本語第一課</title>
    <url>/posts/3985617401/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/codexiaobo/image@main/%E6%97%A5%E6%9C%AC%E8%AA%9E/20210610195348.4fyolimixse0.jpg" alt="第一課"></p>
<!--sleep-->

<span id="more"></span>

<h1 id="みんなの日本語第一課"><a href="#みんなの日本語第一課" class="headerlink" title="みんなの日本語第一課"></a>みんなの日本語第一課</h1><table>
<thead>
<tr>
<th align="center"><strong>いち</strong></th>
<th align="center"><strong>一</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>に</strong></td>
<td align="center"><strong>二</strong></td>
</tr>
<tr>
<td align="center"><strong>さん</strong></td>
<td align="center"><strong>三</strong></td>
</tr>
<tr>
<td align="center"><strong>し／よん</strong></td>
<td align="center"><strong>四</strong></td>
</tr>
<tr>
<td align="center"><strong>ご</strong></td>
<td align="center"><strong>五</strong></td>
</tr>
<tr>
<td align="center"><strong>ろく</strong></td>
<td align="center"><strong>六</strong></td>
</tr>
<tr>
<td align="center"><strong>しち／なな</strong></td>
<td align="center"><strong>七</strong></td>
</tr>
<tr>
<td align="center"><strong>はち</strong></td>
<td align="center"><strong>八</strong></td>
</tr>
<tr>
<td align="center"><strong>く／きゅう</strong></td>
<td align="center"><strong>九</strong></td>
</tr>
<tr>
<td align="center"><strong>じゅう</strong></td>
<td align="center"><strong>十</strong></td>
</tr>
<tr>
<td align="center"><strong>わたし（私）</strong></td>
<td align="center"><strong>我</strong></td>
</tr>
<tr>
<td align="center"><strong>がくせい（学生）</strong></td>
<td align="center"><strong>学生</strong></td>
</tr>
<tr>
<td align="center"><strong>かいしゃいん（会社員）</strong></td>
<td align="center"><strong>公司职员</strong></td>
</tr>
<tr>
<td align="center"><strong>あなた（貴方）</strong></td>
<td align="center"><strong>那个人（礼貌的说法）</strong></td>
</tr>
<tr>
<td align="center"><strong>はい</strong></td>
<td align="center"><strong>是</strong></td>
</tr>
<tr>
<td align="center"><strong>いいえ</strong></td>
<td align="center"><strong>不是</strong></td>
</tr>
<tr>
<td align="center"><strong>ぎんこういん（銀行員）</strong></td>
<td align="center"><strong>银行职员</strong></td>
</tr>
<tr>
<td align="center"><strong>いしゃ（医者）</strong></td>
<td align="center"><strong>医生</strong></td>
</tr>
<tr>
<td align="center"><strong>あのかた（あの方）</strong></td>
<td align="center"><strong>那个人</strong></td>
</tr>
<tr>
<td align="center"><strong>どなた</strong></td>
<td align="center"><strong>哪位（谁的礼貌说法）</strong></td>
</tr>
<tr>
<td align="center"><strong>だいがく（大学）</strong></td>
<td align="center"><strong>大学</strong></td>
</tr>
<tr>
<td align="center"><strong>さくらだいがく（桜大学）</strong></td>
<td align="center"><strong>樱花大学</strong></td>
</tr>
<tr>
<td align="center"><strong>せんせい（先生）</strong></td>
<td align="center"><strong>老师</strong></td>
</tr>
<tr>
<td align="center"><strong>なんさい（何歳）</strong></td>
<td align="center"><strong>几岁</strong></td>
</tr>
<tr>
<td align="center"><strong>はじめまして（初めまして）</strong></td>
<td align="center"><strong>初次见面</strong></td>
</tr>
<tr>
<td align="center"><strong>おはようございます</strong></td>
<td align="center"><strong>早上好</strong></td>
</tr>
<tr>
<td align="center"><strong>アメリカ</strong></td>
<td align="center"><strong>美国</strong></td>
</tr>
<tr>
<td align="center"><strong>どうぞ</strong></td>
<td align="center"><strong>请</strong></td>
</tr>
<tr>
<td align="center"><strong>どうぞよろしくお願（ねが）いします</strong></td>
<td align="center"><strong>请多多关照</strong></td>
</tr>
<tr>
<td align="center"><strong>ちゅうごく（中国）</strong></td>
<td align="center"><strong>中国</strong></td>
</tr>
<tr>
<td align="center"><strong>じん（人）</strong></td>
<td align="center"><strong>人</strong></td>
</tr>
<tr>
<td align="center"><strong>きょうし（教師）</strong></td>
<td align="center"><strong>教师</strong></td>
</tr>
<tr>
<td align="center"><strong>あのひと（あの人）</strong></td>
<td align="center"><strong>那个人</strong></td>
</tr>
<tr>
<td align="center"><strong>だれ（誰）</strong></td>
<td align="center"><strong>谁</strong></td>
</tr>
<tr>
<td align="center"><strong>ブラジル</strong></td>
<td align="center"><strong>巴西</strong></td>
</tr>
<tr>
<td align="center"><strong>あいくつ</strong></td>
<td align="center"><strong>多大岁数</strong></td>
</tr>
<tr>
<td align="center"><strong>にほん（日本）</strong></td>
<td align="center"><strong>日本</strong></td>
</tr>
<tr>
<td align="center"><strong>イギリス</strong></td>
<td align="center"><strong>英国</strong></td>
</tr>
<tr>
<td align="center"><strong>タイ</strong></td>
<td align="center"><strong>泰国</strong></td>
</tr>
<tr>
<td align="center"><strong>ドイス</strong></td>
<td align="center"><strong>德国</strong></td>
</tr>
<tr>
<td align="center"><strong>けんきゅうしゃ（研究者）</strong></td>
<td align="center"><strong>研究人员</strong></td>
</tr>
<tr>
<td align="center"><strong>こうべ（神戸）</strong></td>
<td align="center"><strong>神户</strong></td>
</tr>
<tr>
<td align="center"><strong>びょういん（病院）</strong></td>
<td align="center"><strong>医院</strong></td>
</tr>
<tr>
<td align="center"><strong>インド</strong></td>
<td align="center"><strong>印度</strong></td>
</tr>
<tr>
<td align="center"><strong>かんこく（韓国）</strong></td>
<td align="center"><strong>韩国</strong></td>
</tr>
<tr>
<td align="center"><strong>しつれいですが（失礼ですが）</strong></td>
<td align="center"><strong>对不起、请问</strong></td>
</tr>
<tr>
<td align="center"><strong>おなまえは（お名前は）</strong></td>
<td align="center"><strong>您贵姓、您叫什么名字</strong></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<h1 id="总结时间"><a href="#总结时间" class="headerlink" title="总结时间"></a>总结时间</h1><p>作者：小博</p>
<p>2021年6月6日11:12:30</p>
]]></content>
      <tags>
        <tag>日语</tag>
      </tags>
  </entry>
  <entry>
    <title>测试</title>
    <url>/posts/1948455747/</url>
    <content><![CDATA[<span id="more"></span>

<p>dasdasdasddasdasdasddasdasdasd</p>
<p>dasdasdasddasdasdasddasdasdasddasdasdasd</p>
<p>dasdasdasddasdasdasddasdasdasddasdasdasd</p>]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/1243066710/</url>
    <content><![CDATA[<span id="more"></span>

<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><blockquote>
<p>Hello World 一切梦开始的地方</p>
</blockquote>]]></content>
  </entry>
</search>
